{"version":3,"sources":["auth/protected-route.js","services/requests.js","components/DataTable.js","components/DataTableFilters.js","components/DataTableContainer.js","assets/images/splashPage.jpg","components/PublicHomePage.js","assets/images/c3Logo.png","components/NavigationBar.js","components/Dashboard.js","App.js","reportWebVitals.js","auth/auth0-provider-with-history.js","index.js"],"names":["ProtectedRoute","component","path","args","withAuthenticationRequired","onRedirecting","loginOptions","redirectUri","window","location","origin","apiUrl","getData","accessToken","a","url","options","method","headers","Authorization","fetch","then","response","ok","Error","json","responseData","data","console","error","addSavedFilter","filterDefs","displayName","body","JSON","stringify","filterJson","getSavedFilters","deleteSavedFilter","filterUUID","alignmentMapping","string","number","currency","percent","date","left","right","center","useStyles","makeStyles","theme","tableOuterContainer","display","fontSize","flexDirection","minHeight","tableHeaderCell","borderRight","tableGridInnerContainer","minWidth","width","tableGridScrollContainer","overflowX","tableHeaderRow","tableHeaderCellDisplay","alignItems","cursor","tableHeaderCellSortImage","marginRight","tableHeaderCellSortImageFlip","transform","tableHeaderCellLabel","overflow","textAlign","tableHeaderCellSortSpacer","tableHeaderButton","tableRow","backgroundColor","palette","action","hover","tableCell","maxHeight","padding","fontWeight","color","text","primary","tableCellStringNumber","wordBreak","tableCellImage","tableCellBorderBottomThick","borderBottom","paginatorContainer","height","justifyContent","paginatorText","DataTable","props","styles","_gridContainerRef","useRef","useState","setFocusedCell","isDataLoading","setIsDataLoading","setWindowDimentions","pageIndex","setPageIndex","tableRows","upperRowIdx","lowerRowIdx","currentTableRows","currentConfig","config","tableAction","actionName","actionData","actions","find","name","type","actionType","getTableSlice","rowsPerPage","size","handleWindowResize","useEffect","addEventListener","removeEventListener","getRowData","column","row","x","value","dataProperty","dataType","toString","replace","handlePageEvent","page","lastPageIndex","Math","ceil","numRows","max","getColumnAlignment","alignmentPref","getCellStyle","cellStyles","styleObjects","forEach","s","includes","push","style","Object","assign","getHeaderCellStyle","headerCellStyles","currentColumns","columns","filter","col","hidden","currentColumnsFlexSum","reduce","prev","curr","flex","currentColumnsDefinedWidth","getColumnWidth","header","current","remainingWidth","offsetWidth","headerBorderWidth","cellBorderWidth","Paper","className","ref","LinearProgress","IconButton","onClick","showHeader","headerRowStyles","map","colIdx","maxWidth","alignmentHeader","sort","sortDirection","handleHeaderClick","length","src","id","rowIdx","rowStyles","onFocus","log","onBlur","event","columnProps","showAction","originalRowIdx","handleCellClick","alignmentRow","onError","StyledValueLabel","withStyles","circle","offset","top","ValueLabel","slider","sliderContainer","marginLeft","minAutocomplete","maxAutocomplete","filterMenu","breakpoints","down","up","filterButtonContainer","filterAddColumnButton","flexGrow","rightRadiusGone","borderTopRightRadius","borderBottomRightRadius","leftRadiusGone","borderTopLeftRadius","borderBottomLeftRadius","filterSaveButton","sliderLabelContainer","sliderLabel","textOverflow","sliderLabelMinMax","paddingLeft","sliderLabelMin","whiteSpace","sliderLabelMax","valueLabelText","valueLabel","deleteIcon","autoComplete","filterValueItem","filterContainer","nested","filterRangeInput","filterRangeItem","filterRangeSlider","filterItem","filterItemNew","filterItemNewButton","colAText","DataTableFilters","filterMenuAnchorEl","setFilterMenuAnchorEl","Set","subMenuState","setSubMenuState","columnMenuOpen","setColumnMenuOpen","saveDialogOpen","setSaveDialogOpen","filterName","setFilterName","saveFilters","filters","handleFilterRangeLimitClicked","handleFilterAdded","handleFilterRangeChange","handleFilterHideSelectChange","handleFilterValueChange","handleFilterRangeCommitted","handleColumnToggle","handleDeleteFilter","visibleColumns","handleFilterMenuClose","handleColumnMenuToggle","toggleState","handleSaveDialogToggle","state","addFilter","getSubMenuItems","ListItem","button","ListItemText","valueLabelFormatDate","moment","format","numberWithCommas","formatRaw","raw","inspect","getFilterMarksFromRaw","getVal","val","marks","mark","rawValue","getRawFromFilterMarks","Grid","container","spacing","item","xs","sm","elevation","currentTarget","transitionDuration","anchorOrigin","horizontal","vertical","anchorReference","PaperProps","anchorEl","open","Boolean","onClose","items","columnName","newState","has","delete","add","Collapse","in","timeout","unmountOnExit","List","disablePadding","getFilterMenuItems","Autocomplete","classes","root","onChange","_","disableCloseOnSelect","multiple","limitTags","groupBy","option","colA","colB","getOptionLabel","renderInput","params","InputProps","startAdornment","TextField","notchedOutline","borderColor","autoFocus","variant","renderOption","Checkbox","checked","disableClearable","filterData","maxvalue","commitedRange","rangeValue","slice","parseInt","Typography","minOpen","newValue","label","maxOpen","edge","Slider","ValueLabelComponent","valueLabelDisplay","onChangeCommitted","min","step","Switch","showSelected","values","selected","mntVal","isSame","valueLabelFormat","getFilter","Dialog","DialogTitle","DialogContent","DialogContentText","onInput","target","margin","fullWidth","DialogActions","Button","colMap","CLASS_END_DATE_DAY_AFTER","FREE_FLOAT","PRIOR_QUARTER_DATE","TOTAL_NON_CASH_AMOUNT","SIC_CODE","FEDERAL_CASE_NUMBER","FEDERAL_JUDGE","TOTAL_CASH","IPO","GAAP","INSTITUTIONAL_OWNERSHIP_PERCENT_PRIOR_QTR","CASH_SHARE","FREE_FLOAT_PCT","TICKER","BANKRUPTCY_CASE","OP","FEDERAL_COURT","MARKET_CAP_LOW","FINAL_SETTELMENT_DATE","CASE_ID","LADDERING","SHORT","IT","RESTATED_FINANCIALS","SEC_ACTION","WHY_SUED","INSIDER_OWNERSHIP","CASE_STATUS","WHY_SUED_ALLEGATIONS","CURRENT_RATIO","CASE_NAME","FEDERAL_FILING_DATE","CLASS_START_DATE","CASH_SETTLEMENT_AMOUND","favoriteCols","drawer","flexShrink","drawerContainer","drawerPaper","marginTop","visibility","overflowY","drawerHandle","position","borderRadius","borderStyle","borderWidth","borderLeft","handleIcon","handleIconRoot","mainContainer","tableContainer","dataGrid","DataTableComponent","getAccessTokenSilently","useAuth0","rawTableData","setRawTableData","tableData","setTableData","currentTableSort","setCurrentTableSort","tableSlice","setTableSlice","tableConfig","setTableConfig","setTableMeta","setFilters","drawerToggle","setDrawerToggle","savedFilters","setSavedFilters","token","getSavedFiltersHelper","rows","meta","convertRowProps","createTableData","createTableConfig","processFilters","boolProps","m","toLowerCase","boolProp","getColumnFromMeta","getColumnConfig","customConfig","propLower","checkForCustomColumnProps","uuidv4","rawType","editable","fav","columnMeta","rowData","wordWrap","tableSortAscHelper","newTableData","b","valA","valB","undefined","localeCompare","mntA","mntB","isAfter","tableSortDescHelper","tableDataClone","tableConfigClone","filteredTableData","atLeastOneChange","passFilter","maxValue","minValue","isBefore","filterAddedHelper","initialValue","columnData","Array","from","i","idx","generateRangeFilterMarks","optionsSet","columnDataMnt","saveFiltersHelper","filterDef","deleteSavedFilterHelper","filtersData","uuid","applySavedFilters","filterJSON","parse","columnsToToggle","filtersToAdd","columnIds","handleColumnToggleBatch","outerContainer","Drawer","anchor","paper","ListItemIcon","ListItemSecondaryAction","aria-label","Divider","filterId","filterIndex","findIndex","f","updatedFilter","splice","columnId","tableEvent","numTableRows","tableSliceHandler","newTableConfig","tableSortHandler","backgroundImage","splashImage","backgroundPosition","backgroundSize","titleField","marginBottom","textTransform","overlay","background","loginButton","loginButtonOuter","border","loginButtonMarked","bottom","transition","transitions","create","focusVisible","loginBase","zIndex","opacity","PublicHomePage","loginWithRedirect","align","ButtonBase","focusRipple","focusVisibleClassName","loginButtonInner","NavigationBar","isAuthenticated","logout","user","loading","currentLocation","useLocation","pathname","AppBar","appBar","Toolbar","toolbar","to","logo","c3Logo","currentNavigationLabel","logoutLabel","disabled","Avatar","alt","picture","secondary","Dashboard","bodyContainer","default","appContainer","App","isLoading","exact","DataTableContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Auth0ProviderWithHistory","children","history","useHistory","domain","clientId","onRedirectCallback","appState","returnTo","audience","createMuiTheme","typography","htmlFontSize","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.7de91894.chunk.js","sourcesContent":["import React from \"react\"\nimport { Route } from \"react-router-dom\"\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\"\n\nconst ProtectedRoute = ({ component, path, ...args }) => {\n    return ( \n    <Route\n    component={withAuthenticationRequired(component, {\n      onRedirecting: () => <div>Application is Loading</div>,\n      loginOptions: {\n        redirectUri: `${window.location.origin}${path}`\n      }\n    })}\n    {...args}\n  />)\n  };\n\nexport default ProtectedRoute;","// const apiUrl = \"https://c3theanswer.com/api\";\nconst apiUrl = 'http://localhost:6060/api'\n\nexport const getData = async (accessToken) => {\n  const url = `${apiUrl}/data/tableData`;\n  try {\n    const options = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    };\n    return fetch(url, options)\n      .then((response) => {\n        if (!response.ok) throw new Error(\"bad server/client response\");\n        return response.json();\n      })\n      .then((responseData) => {\n        if (responseData?.data) {\n          return responseData.data;\n        } else {\n          throw new Error(\"bad json response\");\n        }\n      });\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n\nexport const addSavedFilter = async (accessToken, filterDefs, displayName) => {\n  const url = `${apiUrl}/data/saveFilter`;\n  const body = JSON.stringify({\n    filterJson: filterDefs,\n    displayName,\n  });\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body,\n  };\n  try {\n    return fetch(url, options)\n      .then((response) => {\n        if (!response.ok) throw new Error(\"bad server/client response\");\n        return response.json();\n      })\n      .then((responseData) => {\n        if (responseData?.data) {\n          return responseData.data;\n        } else {\n          throw new Error(\"bad json response\");\n        }\n      });\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n\nexport const getSavedFilters = async (accessToken) => {\n  const url = `${apiUrl}/data/getFilters`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  };\n  try {\n    return fetch(url, options)\n      .then((response) => {\n        if (!response.ok) throw new Error(\"bad server/client response\");\n        return response.json();\n      })\n      .then((responseData) => {\n        if (responseData?.data) {\n          return responseData.data;\n        } else {\n          throw new Error(\"bad json response\");\n        }\n      });\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n\nexport const deleteSavedFilter = async (accessToken, filterUUID) => {\n  const url = `${apiUrl}/data/deleteFilter/${filterUUID}`;\n  const options = {\n    method: \"DELETE\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  };\n  try {\n    return fetch(url, options)\n      .then((response) => {\n        if (!response.ok) throw new Error(\"bad server/client response\");\n        return response.json();\n      })\n      .then((responseData) => {\n        if (responseData?.data) {\n          return responseData.data;\n        } else {\n          throw new Error(\"bad json response\");\n        }\n      });\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  makeStyles,\n  LinearProgress,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\nimport SortIcon from \"@material-ui/icons/Sort\";\nimport NavigateBefore from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNext from \"@material-ui/icons/NavigateNext\";\n\nconst alignmentMapping = {\n  string: \"flex-start\",\n  number: \"center\",\n  currency: \"center\",\n  percent: \"center\",\n  date: \"flex-start\",\n  left: \"flex-start\",\n  right: \"flex-end\",\n  center: \"center\",\n};\n\n// built in action types\nconst ACTION_DATA_SLICE = \"dataSlice\";\nconst ACTION_CELL_UPDATED = \"cellUpdated\";\nconst ACTION_COLUMN_OPTION_UPDATED = \"columnOptionUpdated\";\nconst ACTION_COLUMN_SORT = \"columnSort\";\n\nconst DEFAULT_COL_WIDTH = 200;\n\nconst DataTable = (props) => {\n  const styles = useStyles();\n\n  // lower/upper row indices of the current data source being displayed\n  var _gridContainerRef = useRef(null);\n\n  const [focusedCell, setFocusedCell] = useState(null);\n  const [isDataLoading, setIsDataLoading] = useState(true);\n  const [windowDimentions, setWindowDimentions] = useState({\n    width: null,\n    height: null,\n  });\n  const [pageIndex, setPageIndex] = useState(0);\n\n  if (props.tableRows) {\n    var {\n      upperRowIdx,\n      lowerRowIdx,\n      tableRows: currentTableRows,\n    } = props.tableRows;\n  }\n  const currentConfig = props.config;\n  var currentPage;\n\n  // Respond to user interaction and send events to default or config defined actions in parent\n  const tableAction = (actionName, actionData) => {\n    if (currentConfig) {\n      const action = currentConfig.actions.find((a) => a.name === actionName);\n      if (action) {\n        props.tableAction({ type: action.actionType, data: actionData });\n        return;\n      }\n    }\n    // default actions must be handled by parent for functionality\n    props.tableAction({ type: actionName, data: actionData });\n  };\n\n  const getTableSlice = () => {\n    lowerRowIdx = lowerRowIdx || 0;\n    upperRowIdx = upperRowIdx || currentConfig.rowsPerPage;\n    tableAction(ACTION_DATA_SLICE, {\n      lowerRowIdx,\n      upperRowIdx,\n      size: currentConfig.rowsPerPage,\n    });\n  };\n\n  const handleWindowResize = () => {\n    setWindowDimentions({ width: window.width, height: window.height });\n  };\n\n  useEffect(() => {\n    if (!props.config) return;\n    getTableSlice(props.config);\n    if (!isDataLoading && !currentTableRows) {\n      setIsDataLoading(true);\n    }\n  }, [props.config]);\n\n  useEffect(() => {\n    if (isDataLoading && currentConfig && currentTableRows) {\n      setIsDataLoading(false);\n    }\n  }, [props.tableRows]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  });\n\n  const numberWithCommas = (x) => {\n    if (x == null) return \"\";\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  // Used by template\n  const getRowData = (column, row) => {\n    let value = row.data[column.dataProperty];\n    switch (column.dataType) {\n      case \"date\":\n      case \"image\":\n      case \"number\":\n      case \"string\":\n        break;\n      case \"currency\":\n        value = value != null ? `$${numberWithCommas(value)}` : value;\n        break;\n      case \"percent\":\n        value = value != null ? `${value}%` : value;\n        break;\n    }\n    return value;\n  };\n\n  // criteria check for redering input options\n  // column must be editable and cell must be focused\n  const cellInputOptions = (column, rowIdx, colIdx) => {\n    if (\n      !(focusedCell && focusedCell[0] === rowIdx && focusedCell[1] === colIdx)\n    )\n      return;\n    if (\n      !(currentConfig.editable && currentConfig.editable[column.dataProperty])\n    )\n      return;\n    return currentConfig.editable[column.dataProperty].type;\n  };\n\n  const handlePageEvent = (page) => {\n    const lastPageIndex =\n      Math.ceil(currentConfig.numRows / currentConfig.rowsPerPage) - 1;\n    if (page < 0 || page > lastPageIndex) return;\n    lowerRowIdx = Math.max(page * currentConfig.rowsPerPage, 0);\n    upperRowIdx = lowerRowIdx + currentConfig.rowsPerPage;\n    if (upperRowIdx > currentConfig.numRows) {\n      upperRowIdx = currentConfig.numRows;\n    }\n    getTableSlice();\n    setFocusedCell(null);\n    setPageIndex(page);\n  };\n\n  const handleCellChange = (rowIdx, dataType, dataProperty, value) => {\n    if (dataType === \"number\") {\n      value = parseFloat(value);\n    }\n    if (dataType === \"string\") {\n      value = value.toString();\n    }\n    const originalRowIdx = rowIdx + rowIdx.lowerRowIdx;\n    tableAction(ACTION_CELL_UPDATED, {\n      rowIdx: originalRowIdx,\n      dataType,\n      dataProperty,\n      value,\n    });\n  };\n\n  const handleCellClick = (row, column, rowIdx, colIdx, event) => {\n    if (!row.actions) return;\n    currentConfig.actions.forEach((action) => {\n      if (\n        row.actions.includes(action.name) &&\n        (!action.columnProps.length ||\n          action.columnProps.includes(column.dataProperty)) && // action applicable for column\n        (!action.showAction || action.showAction(row)) // action applicable for row\n      ) {\n        const originalRowIdx = rowIdx + lowerRowIdx;\n        tableAction(action.name, {\n          rowIdx: originalRowIdx,\n          dataProperty: column.dataProperty,\n        });\n      }\n    });\n    setFocusedCell([rowIdx, colIdx]);\n  };\n\n  const handleHeaderClick = (column) => {\n    if (!column.sort) return;\n    setFocusedCell(null);\n    tableAction(ACTION_COLUMN_SORT, {\n      dataProperty: column.dataProperty,\n      sortDirection: column.sortDirection,\n    });\n  };\n\n  const handleColumnOptionChange = (column, value) => {\n    tableAction(ACTION_COLUMN_OPTION_UPDATED, { column, value });\n  };\n\n  const updateCurrentPage = () => {\n    if (!lowerRowIdx == undefined || !currentConfig) return;\n    currentPage = Math.floor(lowerRowIdx / currentConfig.rowsPerPage);\n  };\n\n  const getColumnAlignment = (column, alignmentPref) => {\n    if (alignmentPref) {\n      return alignmentMapping[alignmentPref];\n    }\n    if (alignmentMapping[column.dataType]) {\n      return alignmentMapping[column.dataType];\n    }\n    return alignmentMapping.center;\n  };\n\n  const getCellStyle = (row, column) => {\n    if (!row.cellStyles) return null;\n    const styleObjects = [];\n    row.cellStyles.forEach((s) => {\n      if (\n        s.dataProperty.includes(\"*\") ||\n        s.dataProperty.includes(column.dataProperty)\n      ) {\n        styleObjects.push(s.style);\n      }\n    });\n    return Object.assign({}, ...styleObjects);\n  };\n\n  const getHeaderCellStyle = (column) => {\n    if (!currentConfig.headerCellStyles) return;\n    const styleObjects = [];\n    currentConfig.headerCellStyles.forEach((s) => {\n      if (\n        s.dataProperty.includes(\"*\") ||\n        s.dataProperty.includes(column.dataProperty)\n      ) {\n        styleObjects.push(s.style);\n      }\n    });\n    return Object.assign({}, ...styleObjects);\n  };\n\n  // const getTextWidth = (text, size) => {\n  //   const width = pixelWidth(text, {size})\n  //   return `${width}px`\n  // }\n\n  const getColumns = () => {\n    if (currentConfig) {\n      return currentConfig.columns.filter((col) => !col.hidden);\n    }\n    return null;\n  };\n\n  const currentColumns = getColumns();\n  const currentColumnsFlexSum = currentColumns\n    ? currentColumns.reduce((prev, curr) => {\n        const currVal = curr.flex ? curr.flex : 0;\n        return prev + currVal;\n      }, 0)\n    : 0;\n  const currentColumnsDefinedWidth = currentColumns\n    ? currentColumns.reduce((prev, curr) => {\n        const currVal = curr.width\n          ? curr.width\n          : curr.flex\n          ? 0\n          : DEFAULT_COL_WIDTH;\n        return prev + currVal;\n      }, 0)\n    : 0;\n\n  const getColumnWidth = (column, header) => {\n    var width = DEFAULT_COL_WIDTH;\n    if (column.width) {\n      width = column.width;\n    } else if (column.flex && _gridContainerRef.current) {\n      const remainingWidth =\n        _gridContainerRef.current.offsetWidth - currentColumnsDefinedWidth;\n      if (remainingWidth > 0) {\n        const fraction = remainingWidth / currentColumnsFlexSum;\n        width = fraction * column.flex;\n      }\n      return (width = width - 30);\n    }\n    if (header) {\n      return width - column.headerBorderWidth || 0;\n    } else {\n      return width - column.cellBorderWidth || 0;\n    }\n  };\n\n  const getRowHeight = (rowIdx) => {\n    if (focusedCell && focusedCell[0] === rowIdx) {\n      return \"400px\";\n    }\n    return \"100px\";\n  };\n\n  return (\n    <Paper className={styles.tableOuterContainer} ref={_gridContainerRef}>\n      {isDataLoading && <LinearProgress color=\"secondary\" />}\n      {!isDataLoading && (\n        <>\n          <div\n            className={`${styles.paginatorContainer} ${styles.tableCellBorderBottomThick}`}\n          >\n            <IconButton\n              component=\"div\"\n              onClick={() => handlePageEvent(pageIndex - 1)}\n            >\n              <NavigateBefore />\n            </IconButton>\n            <div\n              className={styles.paginatorText}\n            >{`Showing ${lowerRowIdx} - ${upperRowIdx} of ${currentConfig.numRows}`}</div>\n            <IconButton\n              component=\"div\"\n              onClick={() => handlePageEvent(pageIndex + 1)}\n            >\n              <NavigateNext />\n            </IconButton>\n          </div>\n          <div className={styles.tableGridScrollContainer}>\n            <div className={styles.tableGridInnerContainer}>\n              {currentConfig.showHeader && (\n                <div\n                  style={currentConfig.headerRowStyles}\n                  className={`${styles.tableHeaderRow} ${styles.tableCellBorderBottomThick}`}\n                >\n                  {currentColumns.map((column, colIdx) => {\n                    return (\n                      <div\n                        key={column.id}\n                        style={{\n                          minWidth: getColumnWidth(column, true),\n                          maxWidth: getColumnWidth(column, true),\n                          justifyContent: getColumnAlignment(\n                            column,\n                            column.alignmentHeader\n                          ),\n                          ...getHeaderCellStyle(column),\n                        }}\n                        className={`${styles.tableCell} ${styles.tableHeaderCell}`}\n                      >\n                        <div\n                          onClick={() => handleHeaderClick(column)}\n                          className={styles.tableHeaderCellDisplay}\n                        >\n                          {column.sort && column.sortDirection === \"asc\" && (\n                            <SortIcon\n                              fontSize=\"small\"\n                              className={styles.tableHeaderCellSortImageFlip}\n                            />\n                          )}\n                          {column.sort && column.sortDirection === \"desc\" && (\n                            <SortIcon\n                              fontSize=\"small\"\n                              className={styles.tableHeaderCellSortImage}\n                            />\n                          )}\n                          <span\n                            className={`${styles.tableHeaderCellLabel} ${\n                              !column.sort || !column.sortDirection\n                                ? styles.tableHeaderCellSortSpacer\n                                : \"\"\n                            }`}\n                          >\n                            {column.displayName}\n                          </span>\n                        </div>\n                        {column.options.length ? (\n                          <button className={styles.tableHeaderButton}>\n                            <img src=\"assets/icon/menu-drop-down-open.svg\" />\n                          </button>\n                        ) : null}\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n              {currentTableRows.map((row, rowIdx) => {\n                return (\n                  <div\n                    key={row.id}\n                    style={row.rowStyles}\n                    className={`${styles.tableRow} ${\n                      rowIdx === currentTableRows.length - 1\n                        ? styles.tableCellBorderBottomThick\n                        : \"\"\n                    }`}\n                    onFocus={() => {\n                      console.log(\"ONFOCUS\");\n                    }}\n                    onBlur={() => {\n                      console.log(\"ONBLUR\");\n                    }}\n                  >\n                    {currentColumns.map((column, colIdx) => {\n                      return (\n                        <div\n                          key={column.id}\n                          onClick={(event) =>\n                            handleCellClick(row, column, rowIdx, colIdx, event)\n                          }\n                          style={getCellStyle(row, column)}\n                        >\n                          <div\n                            className={styles.tableCell}\n                            style={{\n                              // minWidth: getColumnWidth(column),\n                              // maxWidth: getColumnWidth(column),\n                              textAlign: getColumnAlignment(\n                                column,\n                                column.alignmentRow\n                              ),\n                              justifyContent: getColumnAlignment(\n                                column,\n                                column.alignmentRow\n                              ),\n                            }}\n                          >\n                            {[\n                              \"string\",\n                              \"number\",\n                              \"currency\",\n                              \"percent\",\n                              \"date\",\n                            ].includes(column.dataType) &&\n                              getRowData(\n                                column,\n                                row\n                              )\n                              // <div className={styles.tableCellStringNumber}>\n                              // </div>\n                            }\n                            {column.dataType === \"image\" && (\n                              <div className={styles.tableCellImage}>\n                                {\n                                  <img\n                                    src={getRowData(column, row)}\n                                    onError={() => this.style.display}\n                                  />\n                                }\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className={styles.paginatorContainer}>\n            <IconButton\n              component=\"div\"\n              onClick={() => handlePageEvent(pageIndex - 1)}\n            >\n              <NavigateBefore />\n            </IconButton>\n            <div\n              className={styles.paginatorText}\n            >{`Showing ${lowerRowIdx} - ${upperRowIdx} of ${currentConfig.numRows}`}</div>\n            <IconButton\n              component=\"div\"\n              onClick={() => handlePageEvent(pageIndex + 1)}\n            >\n              <NavigateNext />\n            </IconButton>\n          </div>\n        </>\n      )}\n    </Paper>\n  );\n};\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    tableOuterContainer: {\n      display: \"flex\",\n      fontSize: \"1.4rem\",\n      flexDirection: \"column\",\n      minHeight: \"50vh\",\n    },\n    tableHeaderCell: {\n      borderRight: \"1px solid #696969\",\n    },\n    tableGridInnerContainer: {\n      minWidth: \"100%\",\n      width: \"fit-content\",\n    },\n    tableGridScrollContainer: {\n      overflowX: \"auto\",\n    },\n    tableHeaderRow: {\n      display: \"flex\",\n    },\n    tableHeaderCellDisplay: {\n      display: \"flex\",\n      alignItems: \"center\",\n      cursor: \"pointer\",\n    },\n    tableHeaderCellSortImage: {\n      marginRight: \"10px\",\n    },\n    tableHeaderCellSortImageFlip: {\n      marginRight: \"10px\",\n      transform: \"rotate(180deg)\",\n    },\n    tableHeaderCellLabel: {\n      display: \"inline-block\",\n      overflow: \"hidden\",\n      textAlign: \"center\"\n    },\n    tableHeaderCellSortSpacer: {\n      // marginLeft: '22px'\n    },\n    tableHeaderButton: {},\n    tableRow: {\n      display: \"flex\",\n      \"&:hover\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n    tableCell: {\n      display: \"flex\",\n      minHeight: \"48px\",\n      maxHeight: \"100px\",\n      padding: \"5px 15px\",\n      alignItems: \"center\",\n      minWidth: \"100px\",\n      overflow: \"hidden\",\n      fontWeight: \"500\",\n      color: theme.palette.text.primary,\n    },\n    tableCellStringNumber: {\n      fontSize: \"1.6rem\",\n      color: \"#3A3A3A\",\n      wordBreak: \"break-all\",\n      overflow: \"hidden\",\n      maxHeight: \"inherit\",\n    },\n    tableCellImage: {},\n    tableCellBorderBottomThick: {\n      borderBottom: \"5px solid #696969\",\n    },\n    paginatorContainer: {\n      height: \"48px\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    paginatorText: {\n      padding: \"0px 10px\",\n      fontSize: \"1.6rem\",\n    },\n  };\n});\n\nexport default DataTable;\n","import {\n  Button,\n  Checkbox,\n  Collapse,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Menu,\n  Paper,\n  Slider,\n  Switch,\n  TextField,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport ValueLabel from \"@material-ui/core/Slider/ValueLabel\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport ViewWeekIcon from \"@material-ui/icons/ViewWeek\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\n\nconst DataTableFilters = (props) => {\n  const styles = useStyles();\n\n  const [filterMenuAnchorEl, setFilterMenuAnchorEl] = useState(null);\n  const [columnMenuAnchorEl, setColumnMenuAnchorEl] = useState(null);\n  const [subMenuState, setSubMenuState] = useState(new Set());\n  const [columnMenuOpen, setColumnMenuOpen] = useState(false);\n  const [saveDialogOpen, setSaveDialogOpen] = useState(false);\n  const [filterName, setFilterName] = useState();\n\n  const {\n    saveFilters,\n    columns,\n    filters,\n    handleFilterRangeLimitClicked,\n    handleFilterAdded,\n    handleFilterRangeChange,\n    handleFilterHideSelectChange,\n    handleFilterValueChange,\n    handleFilterRangeCommitted,\n    handleColumnToggle,\n    handleDeleteFilter,\n  } = props;\n\n  useEffect(() =>{\n    \n  },[filters])\n\n  const visibleColumns = columns?.filter((col) => !col.hidden);\n\n\n  if(filters && filters.length > 0){\n    filters.forEach(filter => {\n      if(filter.options && filter.options.length > 0){\n        filter.options.sort();\n      }\n    });\n  }\n  \n\n  console.log(\"filters>>\",filters)\n  const handleFilterMenuOpen = (event) => {\n    setFilterMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleFilterMenuClose = () => {\n    setSubMenuState(new Set());\n    setFilterMenuAnchorEl(null);\n  };\n\n  const handleColumnMenuOpen = (event) => {\n    setColumnMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleColumnMenuToggle = (toggleState) => {\n    setColumnMenuOpen(toggleState);\n  };\n\n  const handleColumnMenuClose = () => {\n    setColumnMenuAnchorEl(null);\n  };\n\n  const handleSaveDialogToggle = () => {\n    setSaveDialogOpen((state) => !state);\n  };\n\n  const handleCollapseMenuClicked = (columnName) => {\n    setSubMenuState((state) => {\n      const newState = new Set(state);\n      if (newState.has(columnName)) {\n        newState.delete(columnName);\n      } else {\n        newState.add(columnName);\n      }\n      return newState;\n    });\n  };\n\n  const addFilter = (column, type) => {\n    handleFilterAdded(column, type);\n    handleFilterMenuClose();\n  };\n\n  const getSubMenuItems = (column) => {\n    switch (column.dataType) {\n      case \"date\":\n        return (\n          <>\n            <ListItem\n              key=\"item-range\"\n              button\n              className={styles.nested}\n              onClick={() => addFilter(column, \"range\")}\n            >\n              <ListItemText primary=\"Range\" />\n            </ListItem>\n            <ListItem\n              key=\"item-data\"\n              button\n              className={styles.nested}\n              onClick={() => addFilter(column, \"value\")}\n            >\n              <ListItemText primary=\"Date\" />\n            </ListItem>\n          </>\n        );\n      case \"percent\":\n      case \"currency\":\n      case \"number\":\n        return (\n          <>\n            <ListItem\n              key=\"item-range\"\n              button\n              className={styles.nested}\n              onClick={() => addFilter(column, \"range\")}\n            >\n              <ListItemText primary=\"Range\" />\n            </ListItem>\n            <ListItem\n              key=\"item-value\"\n              button\n              className={styles.nested}\n              onClick={() => addFilter(column, \"value\")}\n            >\n              <ListItemText primary=\"Value\" />\n            </ListItem>\n          </>\n        );\n    }\n  };\n\n  const getFilterMenuItems = () => {\n    const items = [];\n    visibleColumns.map((col) => {\n      if (col.dataType === \"string\") {\n        items.push(\n          <ListItem key={col.id} button onClick={() => addFilter(col, \"value\")}>\n            <ListItemText primary={col.displayName} />\n          </ListItem>\n        );\n      } else {\n        items.push(\n          <ListItem\n            key={`${col.id}-button`}\n            button\n            onClick={() => handleCollapseMenuClicked(col.displayName)}\n          >\n            <ListItemText primary={col.displayName} />\n            {subMenuState.has(col.displayName) ? (\n              <ExpandLess style={{ marginRight: \"20px\" }} />\n            ) : (\n              <ExpandMore style={{ marginRight: \"20px\" }} />\n            )}\n          </ListItem>\n        );\n        items.push(\n          <Collapse\n            key={`${col.id}-collapse`}\n            in={subMenuState.has(col.displayName)}\n            timeout=\"auto\"\n            unmountOnExit\n          >\n            <List component=\"div\" disablePadding>\n              {getSubMenuItems(col)}\n            </List>\n          </Collapse>\n        );\n      }\n    });\n    return items;\n  };\n\n  const valueLabelFormat = (value) => {\n    var newValue = Number(value);\n    var numLength = String(newValue).match(/\\d/g).length;\n    if (numLength > 5) {\n      const [coefficient, exponent] = newValue\n        .toExponential()\n        .split(\"e\")\n        .map((item) => Number(item));\n      newValue = `${coefficient.toFixed(2)}e^${exponent}`;\n    }\n    return <div className={styles.valueLabelText}>{newValue}</div>;\n  };\n\n  const valueLabelFormatDate = (value) => {\n    return (\n      <div className={styles.valueLabelText}>\n        {moment(value).format(\"Y-MM-DD\")}\n      </div>\n    );\n  };\n\n  const numberWithCommas = (x) => {\n    if (x == null) return \"\";\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  const formatRaw = (raw) => {\n    console.log(\"raw>>\",raw)\n    if(!raw || raw == 0){\n      return \"0000-00-00\";\n    }\n    if (raw.inspect().includes(\"invalid\")) {\n      return \"0000-00-00\";\n    }\n    return raw.format(\"YYYY-MM-DD\");\n  };\n\n  const getFilterMarksFromRaw = (filter, value) => {\n    const getVal = (val) => {\n      if (filter.column.dataType === \"date\") {\n        return val.format(\"YYYY-MM-DD\");\n      }\n      return val;\n    };\n    return filter.marks.find((mark) => getVal(mark.rawValue) === getVal(value))\n      .value;\n  };\n\n  const getRawFromFilterMarks = (filter, val) => {\n    let raw = val;\n    if (filter.column.dataType === \"currency\") {\n      raw = raw != null ? `$${numberWithCommas(raw)}` : null;\n    }\n    console.log(\"val>>\",val)\n    console.log(\"filter>>\",filter)\n\n    if (filter.column.dataType === \"date\") {\n      raw = formatRaw(raw);\n    }\n    return raw;\n  };\n\n  const getFilter = (filterData) => {\n    switch (filterData.column.dataType) {\n      case \"currency\":\n      case \"percent\":\n      case \"number\":\n        if (filterData.type === \"range\") {\n          let maxvalue;\n          if(filterData.column.dataType === 'date'){\n             maxvalue = moment(filterData.commitedRange[1]).format(\"YYYY-MM-DD\")\n          }\n          else{\n             maxvalue = getRawFromFilterMarks(\n              filterData,\n              filterData.rangeValue[1]\n            ).slice(1).toString().replace(/,/g, '')\n          }\n          \n          console.log(\"maxvalue>>\",maxvalue)\n         \n          maxvalue = parseInt(maxvalue)\n          console.log(\"maxvalue>1>\",maxvalue)\n\n          return (\n            <Grid item xs={12} sm={6} key={filterData.id}>\n              <Paper className={styles.filterRangeItem}>\n                <div className={styles.sliderLabelContainer}>\n                  <Typography\n                    className={styles.sliderLabel}\n                    component=\"span\"\n                    variant={\"h6\"}\n                  >\n                    {filterData.column.displayName}\n                  </Typography>\n                  <div className={styles.sliderLabelMinMax}>\n                    {!filterData.minOpen ? (\n                      <Typography\n                        onClick={() =>\n                          handleFilterRangeLimitClicked(filterData.id, \"min\")\n                        }\n                        className={styles.sliderLabelMin}\n                        component=\"span\"\n                        variant={\"subtitle1\"}\n                      >{moment(filterData.commitedRange[0].format(\"YYYY-MM-DD\"))}</Typography>\n                    ) : (\n                      <Autocomplete\n                        onClose={() =>\n                          handleFilterRangeLimitClicked(filterData.id, \"min\")\n                        }\n                        open\n                        disableCloseOnSelect\n                        className={styles.minAutocomplete}\n                        options={filterData.marks.map((mark) => mark.rawValue)}\n                        getOptionLabel={(option) => {\n                          if (option == null) return null;\n                          if (filterData.column.dataType === \"currency\") {\n                            return option != null\n                              ? `$${numberWithCommas(option)}`\n                              : \"null\";\n                          }\n                          return option.toString();\n                        }}\n                        onChange={(_, value) => {\n                          if (value === filterData.commitedRange[0]) return;\n                          const newValue = [\n                            getFilterMarksFromRaw(filterData, value),\n                            filterData.rangeValue[1],\n                          ];\n                          handleFilterRangeCommitted(filterData.id, newValue);\n                        }}\n                        renderInput={(params) => {\n                          return (\n                            <TextField\n                              autoFocus\n                              {...params}\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              label=\"\"\n                            />\n                          );\n                        }}\n                        disableClearable\n                        size=\"small\"\n                        multiple={false}\n                        limitTags={0}\n                      ></Autocomplete>\n                    )}\n                    {!filterData.maxOpen ? (\n                      <Typography\n                        onClick={() =>\n                          handleFilterRangeLimitClicked(filterData.id, \"max\")\n                        }\n                        className={styles.sliderLabelMax}\n                        component=\"span\"\n                        variant={\"subtitle1\"}\n                      >{`Max: ${moment(filterData.commitedRange[1].format(\"YYYY-MM-DD\"))}`}</Typography>\n                    ) : (\n                      <Autocomplete\n                        onClose={() =>\n                          handleFilterRangeLimitClicked(filterData.id, \"max\")\n                        }\n                        open\n                        disableCloseOnSelect\n                        className={styles.maxAutocomplete}\n                        options={filterData.marks.map((mark) => mark.rawValue)}\n                        onChange={(_, value) => {\n                          if (value === filterData.commitedRange[1]) return;\n                          const newValue = [\n                            filterData.rangeValue[0],\n                            getFilterMarksFromRaw(filterData, value),\n                          ];\n                          handleFilterRangeCommitted(filterData.id, newValue);\n                        }}\n                        getOptionLabel={(option) => {\n                          if (option == null) return null;\n                          if (filterData.column.dataType === \"currency\") {\n                            return option != null\n                              ? `$${numberWithCommas(option)}`\n                              : \"null\";\n                          }\n                          return option.toString();\n                        }}\n                        renderInput={(params) => {\n                          return (\n                            <TextField\n                              autoFocus\n                              {...params}\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              label=\"\"\n                            />\n                          );\n                        }}\n                        disableClearable\n                        size=\"small\"\n                        multiple={false}\n                        limitTags={0}\n                      ></Autocomplete>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.filterRangeSlider}>\n                  <IconButton\n                    edge=\"start\"\n                    className={styles.deleteIcon}\n                    size=\"small\"\n                    component=\"span\"\n                    onClick={() => handleDeleteFilter(filterData.id)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                  <Slider\n                    classes={{\n                      valueLabel: styles.valueLabel,\n                    }}\n                    ValueLabelComponent={StyledValueLabel}\n                    // valueLabelFormat={valueLabelFormat}\n                    valueLabelDisplay=\"auto\"\n                    value={filterData.rangeValue}\n                    onChange={(_, newValue) => {\n                      console.log(\"newValue>>\",newValue)\n                      handleFilterRangeChange(filterData.id, newValue);\n                    }}\n                    onChangeCommitted={(_, newValue) => {\n                      handleFilterRangeCommitted(filterData.id, newValue);\n                    }}\n                    max={filterData.max}\n                    min={filterData.min}\n                    color=\"secondary\"\n                    step={10000000}\n\n                  />\n                  <div className={styles.sliderContainer}>\n                    <div>Hide</div>\n                    <div>\n                      <Switch\n                        className={styles.slider}\n                        size=\"small\"\n                        checked={filterData.showSelected}\n                        onChange={(event) =>\n                          handleFilterHideSelectChange(filterData.id)\n                        }\n                      />\n                    </div>\n                    <div>Show</div>\n                  </div>\n                </div>\n              </Paper>\n            </Grid>\n          );\n        } else if (filterData.type === \"value\") {\n          return (\n            <Grid item xs={12} sm={6} key={filterData.id}>\n              <Paper className={styles.filterValueItem}>\n                <IconButton\n                  className={styles.deleteIcon}\n                  size=\"small\"\n                  component=\"span\"\n                  onClick={() => handleDeleteFilter(filterData.id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n                <Autocomplete\n                  classes={{\n                    root: styles.autoComplete,\n                  }}\n                  onChange={(_, values) => {\n                    handleFilterValueChange(filterData.id, values);\n                  }}\n                  disableCloseOnSelect\n                  multiple\n                  limitTags={5}\n                  options={filterData.options}\n                  getOptionLabel={(option) => {\n                    if (option == null) return null;\n                    return option.toString();\n                  }}\n                  value={filterData.selected}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      label={filterData.column.displayName}\n                    />\n                  )}\n                />\n                <div className={styles.sliderContainer}>\n                  <div>Hide</div>\n                  <div>\n                    <Switch\n                      className={styles.slider}\n                      size=\"small\"\n                      checked={filterData.showSelected}\n                      onChange={(event) =>\n                        handleFilterHideSelectChange(filterData.id)\n                      }\n                    />\n                  </div>\n                  <div>Show</div>\n                </div>\n              </Paper>\n            </Grid>\n          );\n        }\n        break;\n      case \"date\":\n        if (filterData.type === \"range\") {\n          return (\n            <Grid item xs={12} sm={6} key={filterData.id}>\n              <Paper className={styles.filterRangeItem}>\n                {/* <div className={styles.sliderLabelContainer}>\n                    <Typography className={styles.sliderLabel} component='span' variant={'h6'}>{filterData.column.displayName}</Typography>\n                    <div className={styles.sliderLabelMinMax}>\n                      <Typography className={styles.sliderLabelMin} component='span' variant={'subtitle1'}>{`Min: ${getRawFromFilterMarks(filterData, filterData.rangeValue[0])}`}</Typography>\n                      <Typography className={styles.sliderLabelMax} component='span' variant={'subtitle1'}>{`Max: ${getRawFromFilterMarks(filterData, filterData.rangeValue[1])}`}</Typography>\n                    </div>\n                  </div> */}\n                <div className={styles.sliderLabelContainer}>\n                  <Typography\n                    className={styles.sliderLabel}\n                    component=\"span\"\n                    variant={\"h6\"}\n                  >\n                    {filterData.column.displayName}\n                  </Typography>\n                  <div className={styles.sliderLabelMinMax}>\n                    {!filterData.minOpen ? (\n                      <Typography\n                        onClick={() =>\n                          handleFilterRangeLimitClicked(filterData.id, \"min\")\n                        }\n                        className={styles.sliderLabelMin}\n                        component=\"span\"\n                        variant={\"subtitle1\"}\n                      >{`Min: ${getRawFromFilterMarks(\n                        filterData,\n                        filterData.rangeValue[0]\n                      )}`}</Typography>\n                    ) : (\n                      <Autocomplete\n                        onClose={() =>\n                          handleFilterRangeLimitClicked(filterData.id, \"min\")\n                        }\n                        open\n                        className={styles.minAutocomplete}\n                        disableCloseOnSelect\n                        options={filterData.marks.map((mark) =>\n                          formatRaw(mark.rawValue)\n                        )}\n                        getOptionLabel={(option) => {\n                          if (option == null) return null;\n                          return option.toString();\n                        }}\n                        onChange={(_, value) => {\n                          const mntVal = moment(value);\n                          if (mntVal.isSame(filterData.commitedRange[0]))\n                            return;\n                          const newValue = [\n                            getFilterMarksFromRaw(filterData, mntVal),\n                            filterData.rangeValue[1],\n                          ];\n                          handleFilterRangeCommitted(filterData.id, newValue);\n                        }}\n                        renderInput={(params) => {\n                          return (\n                            <TextField\n                              autoFocus\n                              {...params}\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              label=\"\"\n                            />\n                          );\n                        }}\n                        disableClearable\n                        size=\"small\"\n                        multiple={false}\n                        limitTags={0}\n                      ></Autocomplete>\n                    )}\n                    {!filterData.maxOpen ? (\n                      <Typography\n                        onClick={() =>\n                          handleFilterRangeLimitClicked(filterData.id, \"max\")\n                        }\n                        className={styles.sliderLabelMax}\n                        component=\"span\"\n                        variant={\"subtitle1\"}\n                      >Max</Typography>\n                    ) : (\n                      <Autocomplete\n                        onClose={() =>\n                          handleFilterRangeLimitClicked(filterData.id, \"max\")\n                        }\n                        className={styles.maxAutocomplete}\n                        open\n                        disableCloseOnSelect\n                        options={filterData.marks.map((mark) =>\n                          formatRaw(mark.rawValue)\n                        )}\n                        onChange={(_, value) => {\n                          const mntVal = moment(value);\n                          if (mntVal.isSame(filterData.commitedRange[1]))\n                            return;\n                          const newValue = [\n                            filterData.rangeValue[0],\n                            getFilterMarksFromRaw(filterData, mntVal),\n                          ];\n                          handleFilterRangeCommitted(filterData.id, newValue);\n                        }}\n                        getOptionLabel={(option) => {\n                          if (option == null) return null;\n                          return option.toString();\n                        }}\n                        renderInput={(params) => {\n                          return (\n                            <TextField\n                              autoFocus\n                              {...params}\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              label=\"\"\n                            />\n                          );\n                        }}\n                        disableClearable\n                        size=\"small\"\n                        multiple={false}\n                        limitTags={0}\n                      ></Autocomplete>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.filterRangeSlider}>\n                  <IconButton\n                    edge=\"start\"\n                    className={styles.deleteIcon}\n                    size=\"small\"\n                    component=\"span\"\n                    onClick={() => handleDeleteFilter(filterData.id)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                  <Slider\n                    classes={{\n                      valueLabel: styles.valueLabel,\n                    }}\n                    ValueLabelComponent={StyledValueLabel}\n                    valueLabelFormat={valueLabelFormatDate}\n                    valueLabelDisplay=\"off\"\n                    value={filterData.rangeValue}\n                    onChange={(_, newValue) =>\n                      handleFilterRangeChange(filterData.id, newValue)\n                    }\n                    onChangeCommitted={(_, newValue) => {\n                      handleFilterRangeCommitted(filterData.id, newValue);\n                    }}\n                    max={filterData.max}\n                    min={filterData.min}\n                    color=\"secondary\"\n                  />\n                  <div className={styles.sliderContainer}>\n                    <div>Hide</div>\n                    <div>\n                      <Switch\n                        className={styles.slider}\n                        size=\"small\"\n                        checked={filterData.showSelected}\n                        onChange={(event) =>\n                          handleFilterHideSelectChange(filterData.id)\n                        }\n                      />\n                    </div>\n                    <div>Show</div>\n                  </div>\n                </div>\n              </Paper>\n            </Grid>\n          );\n        } else if (filterData.type === \"value\") {\n          return (\n            <Grid item xs={12} sm={6} key={filterData.id}>\n              <Paper className={styles.filterValueItem}>\n                <IconButton\n                  className={styles.deleteIcon}\n                  size=\"small\"\n                  component=\"span\"\n                  onClick={() => handleDeleteFilter(filterData.id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n                <Autocomplete\n                  classes={{\n                    root: styles.autoComplete,\n                  }}\n                  onChange={(_, values) => {\n                    handleFilterValueChange(filterData.id, values);\n                  }}\n                  disableCloseOnSelect\n                  multiple\n                  value={filterData.selected}\n                  limitTags={5}\n                  options={filterData.options}\n                  getOptionLabel={(option) => {\n                    if (option == null) return null;\n                    return option.toString();\n                  }}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      label={filterData.column.displayName}\n                      color=\"secondary\"\n                    />\n                  )}\n                />\n                <div className={styles.sliderContainer}>\n                  <div>Hide</div>\n                  <div>\n                    <Switch\n                      className={styles.slider}\n                      size=\"small\"\n                      checked={filterData.showSelected}\n                      onChange={(event) =>\n                        handleFilterHideSelectChange(filterData.id)\n                      }\n                    />\n                  </div>\n                  <div>Show</div>\n                </div>\n              </Paper>\n            </Grid>\n          );\n        }\n        break;\n      case \"string\":\n        return (\n          <Grid item xs={12} sm={6} key={filterData.id}>\n            <Paper className={styles.filterValueItem}>\n              <IconButton\n                className={styles.deleteIcon}\n                size=\"small\"\n                component=\"span\"\n                onClick={() => handleDeleteFilter(filterData.id)}\n              >\n                <DeleteIcon />\n              </IconButton>\n              <Autocomplete\n                classes={{\n                  root: styles.autoComplete,\n                }}\n                onChange={(_, options) => {\n                  handleFilterValueChange(filterData.id, options);\n                }}\n                disableCloseOnSelect\n                multiple\n                limitTags={2}\n                options={filterData.options}\n                getOptionLabel={(option) => {\n                  if (option == null) return null;\n                  return option.toString();\n                }}\n                value={filterData.selected}\n                renderInput={(params) => {\n                  return (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      label={filterData.column.displayName}\n                      color=\"secondary\"\n                    />\n                  );\n                }}\n              />\n              <div className={styles.sliderContainer}>\n                <div>Hide</div>\n                <div>\n                  <Switch\n                    className={styles.slider}\n                    color=\"default\"\n                    size=\"small\"\n                    checked={filterData.showSelected}\n                    onChange={(event) =>\n                      handleFilterHideSelectChange(filterData.id)\n                    }\n                  />\n                </div>\n                <div>Show</div>\n              </div>\n            </Paper>\n          </Grid>\n        );\n      default:\n        return (\n          <Grid item xs={12} sm={6} key={filterData.id}>\n            <Paper className={styles.filterItem}>Filter / Facet</Paper>\n          </Grid>\n        );\n    }\n  };\n\n  return (\n    <>\n      <div className={styles.filterContainer}>\n        <Grid container spacing={3}>\n          {visibleColumns?.length && (\n            <Grid item xs={6} sm={6} key=\"new-filter\">\n              <Paper className={`${styles.filterButtonContainer}`}>\n                <Paper\n                  elevation={0}\n                  className={`${styles.filterAddColumnButton} ${\n                    filters.length ? styles.rightRadiusGone : \"\"\n                  }`}\n                  onClick={handleFilterMenuOpen}\n                >\n                  <AddCircleOutlineIcon\n                    style={{ color: \"#FFFF\" }}\n                    fontSize=\"small\"\n                  ></AddCircleOutlineIcon>\n                </Paper>\n                {filters.length ? (\n                  <Paper\n                    onClick={handleSaveDialogToggle}\n                    elevation={0}\n                    className={`${styles.filterSaveButton} ${styles.leftRadiusGone}`}\n                  >\n                    <SaveIcon fontSize=\"small\" />\n                  </Paper>\n                ) : null}\n              </Paper>\n              <Menu\n                transitionDuration={0}\n                anchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\n                anchorReference={null}\n                PaperProps={{\n                  className: styles.filterMenu,\n                }}\n                // className={styles.filterMenu}\n                anchorEl={filterMenuAnchorEl}\n                open={Boolean(filterMenuAnchorEl)}\n                onClose={handleFilterMenuClose}\n              >\n                {getFilterMenuItems()}\n              </Menu>\n            </Grid>\n          )}\n          {visibleColumns?.length && (\n            <Grid item xs={6} sm={6} key=\"new-column\">\n              {!columnMenuOpen && (\n                <Paper>\n                  <Paper\n                    elevation={0}\n                    className={`${styles.filterItemNew} ${styles.filterItem} ${styles.filterItemNewButton}`}\n                    onClick={() => handleColumnMenuToggle(true)}\n                  >\n                    <ViewWeekIcon fontSize=\"small\"></ViewWeekIcon>\n                  </Paper>\n                </Paper>\n              )}\n              {columnMenuOpen && (\n                <Autocomplete\n                  classes={{\n                    root: styles.autoComplete,\n                  }}\n                  onChange={(_, value) => {\n                    handleColumnToggle(value.id);\n                  }}\n                  disableCloseOnSelect\n                  multiple={false}\n                  limitTags={0}\n                  groupBy={(option) => (option.hidden ? \"\" : \" \")}\n                  options={columns\n                    .sort((colA, colB) => {\n                      if (!colA.hidden && colB.hidden) return -1;\n                      if (!colB.hidden && colA.hidden) return 1;\n                      return 0;\n                    })\n                    .map((col) => ({\n                      name: col.displayName,\n                      hidden: col.hidden,\n                      id: col.id,\n                    }))}\n                  getOptionLabel={(option) => {\n                    if (option == null) return null;\n                    return option.name;\n                  }}\n                  renderInput={(params) => {\n                    params.InputProps.startAdornment = []; // we dont want to show the chips\n                    return (\n                      <TextField\n                        InputProps={{\n                          classes: { notchedOutline: { borderColor: \"black\" } },\n                        }}\n                        autoFocus\n                        {...params}\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                      />\n                    );\n                  }}\n                  renderOption={(option) => (\n                    <>\n                      <Checkbox\n                        color=\"default\"\n                        size=\"small\"\n                        checked={!option.hidden}\n                        style={{ marginRight: 8 }}\n                      />\n                      {option.name}\n                    </>\n                  )}\n                  open={columnMenuOpen}\n                  onClose={() => handleColumnMenuToggle(false)}\n                  disableClearable\n                  size=\"small\"\n                />\n              )}\n            </Grid>\n          )}\n          {filters.map((filter) => getFilter(filter))}\n        </Grid>\n      </div>\n      <Dialog open={saveDialogOpen} onClose={handleSaveDialogToggle}>\n        <DialogTitle>Save Current Filter</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please enter a name for your filter\n          </DialogContentText>\n          <TextField\n            onInput={(event) => setFilterName(event.target.value)}\n            autoFocus\n            margin=\"none\"\n            color=\"secondary\"\n            label=\"Filter Name\"\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSaveDialogToggle}>Cancel</Button>\n          <Button\n            onClick={() => {\n              saveFilters(filterName);\n              setFilterName(\"\");\n              handleSaveDialogToggle();\n            }}\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst StyledValueLabel = withStyles({\n  circle: {\n    width: \"52px\",\n    height: \"52px\",\n    // backgroundColor: '#a1a7c7'\n    // backgroundColor: '#ed6666'\n  },\n  offset: {\n    top: \"-56px\",\n  },\n})(ValueLabel);\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    slider: {\n      // marginLeft: '20px'\n    },\n    sliderContainer: {\n      display: \"flex\",\n      marginLeft: \"20px\",\n    },\n    minAutocomplete: {\n      width: \"150px\",\n    },\n    maxAutocomplete: {\n      width: \"150px\",\n      marginLeft: \"20px\",\n    },\n    filterMenu: {\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"calc(50% - 12px)\",\n      },\n      [theme.breakpoints.down(\"lg\")]: {\n        width: \"calc(450px - 12px)\",\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        width: \"calc(600px - 12px)\",\n      },\n      [theme.breakpoints.up(\"xl\")]: {\n        width: \"calc(850px - 12px)\",\n      },\n      maxHeight: \"40vh\",\n      marginTop: \"5px\",\n    },\n    filterButtonContainer: {\n      height: \"40px\",\n      display: \"flex\",\n      width: \"100%\",\n    },\n    filterAddColumnButton: {\n      flexGrow: 1,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      cursor: \"pointer\",\n      fontSize: \"1.4rem\",\n      textAlign: \"center\",\n      backgroundColor: \"inherit\",\n      \"&:hover\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n    rightRadiusGone: {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n    },\n    leftRadiusGone: {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    },\n    filterSaveButton: {\n      width: \"50px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      cursor: \"pointer\",\n      fontSize: \"1.4rem\",\n      textAlign: \"center\",\n      \"&:hover\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n    sliderLabelContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"0px 3px\",\n    },\n    sliderLabel: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    sliderLabelMinMax: {\n      flexGrow: 1,\n      paddingLeft: \"20px\",\n      overflow: \"hidden\",\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n    },\n    sliderLabelMin: {\n      maxWidth: \"50%\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    sliderLabelMax: {\n      marginLeft: \"20px\",\n      maxWidth: \"50%\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    valueLabelText: {\n      color: \"white\",\n    },\n    valueLabel: {\n      left: \"auto\",\n    },\n    deleteIcon: {\n      marginRight: \"20px\",\n      height: \"30px\",\n      width: \"30px\",\n      padding: \"0px\",\n    },\n    autoComplete: {\n      flexGrow: 1,\n    },\n    filterValueItem: {\n      minHeight: \"62px\",\n      fontSize: \"1.4rem\",\n      padding: \"10px 30px\",\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    filterContainer: {},\n    nested: {\n      paddingLeft: \"30px\",\n    },\n    filterRangeInput: {\n      marginRight: \"30px\",\n      width: \"100px\",\n    },\n    filterRangeItem: {\n      minHeight: \"60px\",\n      fontSize: \"1.4rem\",\n      padding: \"10px 30px\",\n    },\n    filterRangeSlider: {\n      display: \"flex\",\n      alignItems: \"flex-end\",\n    },\n    filterItem: {\n      textAlign: \"center\",\n      padding: \"10px 30px\",\n      fontSize: \"1.4rem\",\n      height: \"60px\",\n      display: \"flex\",\n    },\n    filterItemNew: {\n      cursor: \"pointer\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"20px\",\n    },\n    filterItemNewButton: {\n      \"&:hover\": {\n        backgroundColor: theme.palette.action.hover,\n      },\n      flexGrow: 1,\n    },\n    colAText: {\n      fontSize: \"1.8rem\",\n    },\n  };\n});\n\nexport default DataTableFilters;\n","import { useAuth0 } from \"@auth0/auth0-react\";\nimport {\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport * as _ from \"lodash\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  addSavedFilter,\n  deleteSavedFilter,\n  getData,\n  getSavedFilters,\n} from \"../services/requests\";\nimport DataTable from \"./DataTable\";\nimport DataTableFilters from \"./DataTableFilters\";\n\nconst colMap = {\n  CLASS_END_DATE_DAY_AFTER: {\n    name: \"classenddatedayafter\",\n    displayName: \"Class End Date Day After\",\n  },\n  FREE_FLOAT: { name: \"freefloat\", displayName: \"Free Float\" },\n  PRIOR_QUARTER_DATE: {\n    name: \"priorquarterdate\",\n    displayName: \"Prior Quarter Date\",\n  },\n  TOTAL_NON_CASH_AMOUNT: {\n    name: \"totalnoncashamount\",\n    displayName: \"Total Non Cash Amount\",\n  },\n  SIC_CODE: { name: \"siccode\", displayName: \"SIC Code\" },\n  FEDERAL_CASE_NUMBER: {\n    name: \"federalcasenumber\",\n    displayName: \"Federal Case Number\",\n  },\n  FEDERAL_JUDGE: { name: \"federaljudge\", displayName: \"Federal Judge\" },\n  TOTAL_CASH: { name: \"totalcash\", displayName: \"Total Cash on Balance Sheet\" },\n  IPO: { name: \"ipo_yn\", displayName: \"IPO\" },\n  GAAP: { name: \"gaap_yn\", displayName: \"GAAP\" },\n  \"10B_5\": { name: \"10b_5_yn\", displayName: \"10B 5\" },\n  INSTITUTIONAL_OWNERSHIP_PERCENT_PRIOR_QTR: {\n    name: \"institutionalownershippriorquarter\",\n    displayName: \"Institutional Ownership Prior Quarter\",\n  },\n  CASH_SHARE: { name: \"cashshare\", displayName: \"Cash Share\" },\n  FREE_FLOAT_PCT: { name: \"floatpct\", displayName: \"Free Float (%)\" },\n  TICKER: { name: \"ticker\", displayName: \"Ticker\" },\n  BANKRUPTCY_CASE: { name: \"bankruptcycaseyn\", displayName: \"Bankruptcy Case\" },\n  OP: { name: \"po_yn\", displayName: \"PO\" },\n  FEDERAL_COURT: { name: \"federalcourt\", displayName: \"Federal Court\" },\n  MARKET_CAP_LOW: { name: \"marketcaplow\", displayName: \"Market Cap Low\" },\n  FINAL_SETTELMENT_DATE: {\n    name: \"finalsettlementdate\",\n    displayName: \"Final Settlement Date\",\n  },\n  CASE_ID: { name: \"caseid\", displayName: \"Case ID\" },\n  LADDERING: { name: \"ladderingyn\", displayName: \"Laddering\" },\n  SHORT: { name: \"shortpct\", displayName: \"Short (%)\" },\n  IT: { name: \"it_yn\", displayName: \"IT\" },\n  RESTATED_FINANCIALS: {\n    name: \"restatedfinancialsyn\",\n    displayName: \"Restated Financials\",\n  },\n  SEC_ACTION: { name: \"secactionyn\", displayName: \"SEC Action\" },\n  WHY_SUED: { name: \"whysuedcategory\", displayName: \"Why Sued\" },\n  INSIDER_OWNERSHIP: {\n    name: \"insiderownership\",\n    displayName: \"Insider Ownership\",\n  },\n  CASE_STATUS: { name: \"casestatus\", displayName: \"Case Status\" },\n  WHY_SUED_ALLEGATIONS: {\n    name: \"whysuedallegations\",\n    displayName: \"Why Sued Allegations\",\n  },\n  CURRENT_RATIO: { name: \"currentratio\", displayName: \"Current Ratio\" },\n  CASE_NAME: { name: \"casename\", displayName: \"Case Name\" },\n  FEDERAL_FILING_DATE: {\n    name: \"federalfilingdate\",\n    displayName: \"Federal Filing Date\",\n  },\n  CLASS_START_DATE: { name: \"classstartdate\", displayName: \"Class Start Date\" },\n  CASH_SETTLEMENT_AMOUND: {\n    name: \"cashsettlementamount\",\n    displayName: \"Cash Settlement Amount\",\n  },\n  CASH_SETTLEMENT_AMOUND: {\n    name: \"tentativesettlementamount\",\n    displayName: \"Tentative Amount\",\n  },\n  TRANSACTIONAL: { name: \"transactionalyn\", displayName: \"Transactional\" },\n  CLASS_END_DATE: { name: \"classenddate\", displayName: \"Class End Date\" },\n  COMPANY_NAME: { name: \"companyname\", displayName: \"Company Name\" },\n  MARKET_CAP_HIGH: { name: \"marketcaphigh\", displayName: \"Market Cap High\" },\n  MARKET_CAP_DROP: { name: \"marketcapdrop\", displayName: \"Drop\" },\n  TOTAL_SETTLEMENT_AMOUNT: {\n    name: \"totalsettlementamount\",\n    displayName: \"Total Settlement Amount ($)\",\n  },\n  INSTITUTIONAL_OWNERSHIP: {\n    name: \"institutionalownership\",\n    displayName: \"Institutional Ownership\",\n  },\n  INSTITUTIONAL_OWNERSHIP_PCT: {\n    name: \"institutionalownershippct\",\n    displayName: \"Institutional Ownership (%)\",\n  },\n  SEC_11: { name: \"sec_11_yn\", displayName: \"SEC 11\" },\n  MARKET_CAP: { name: \"market_cap\", displayName: \"Market Cap\" },\n  PRIOR_QUARTER_REVENUE: {\n    name: \"priorquarterrevenue\",\n    displayName: \"Prior Quarter Revenue\",\n  },\n  PRIOR_YEAR_REVENUE: {\n    name: \"prioryearrevenue\",\n    displayName: \"Prior Year Revenue\",\n  },\n\n  STATE_FILING_DATE: {\n    name: \"statefilingdate\",\n    displayName: \"State Filing Date\",\n  },\n  FREE_FLOAT_MARKET_CAP: {\n    name: \"freefloatmarketcap\",\n    displayName: \"Free Float Market Cap\",\n  },\n  INSIDER_OWNERSHIP_PERCENT_FILING_DATE: {\n    name: \"insiderownershippercentfilingdate\",\n    displayName: \"Insider Ownership At Filing Date (%)\",\n  },\n  INSTITUTIONAL_OWNERSHIP_PERCENT_QTR_END: {\n    name: \"institutionalownershipqtrend\",\n    displayName: \"Institutional Ownership At Qtr End (%)\",\n  },\n  TOTAL_AMOUNT: { name: \"totalamount\", displayName: \"Total Amount ($)\" },\n  COURT_STATURE: { name: \"courtstature\", displayName: \"Court Stature\" },\n  FEDERAL_JUDGE: { name: \"federaljudge\", displayName: \"Federal Judge\" },\n  SUB_CATEGORY: { name: \"sub-category\", displayName: \"Sub Category\" },\n  CASH_AMOUNT: { name: \"cashamount\", displayName: \"Total Settlement Amount\" },\n};\n\nconst favoriteCols = [\n  \"federalfilingdate\",\n  \"casename\",\n  \"ticker\",\n  \"siccode\",\n  \"whysuedcategory\",\n  \"whysuedallegations\",\n  \"casestatus\",\n  \"marketcaphigh\",\n  \"marketcaplow\",\n  \"marketcapdrop\",\n  \"cashamount\",\n  \"floatpct\",\n  \"freefloatmarketcap\",\n  \"priorquarterrevenue\",\n  \"prioryearrevenue\",\n  \"short\",\n  \"insiderownershippercentfilingdate\",\n  \"institutionalownershipqtrend\",\n  \"totalamount\",\n  \"caseid\",\n  \"courtstature\",\n  \"federalcourt\",\n  \"federaljudge\",\n  \"po_yn\",\n  \"ipo_yn\",\n  \"ladderingyn\",\n  \"transactionalyn\",\n  \"it_yn\",\n  \"gaap_yn\",\n  \"restatedfinancialsyn\",\n  \"10b_5_yn\",\n  \"sec_11_yn\",\n  \"secactionyn\",\n  \"classenddatedayafter\",\n  \"freefloat\",\n  \"priorquarterdate\",\n  \"totalnoncashamount\",\n  \"federalcasenumber\",\n  \"totalcash\",\n  \"institutionalownershippriorquarter\",\n  \"cashshare\",\n  \"bankruptcycaseyn\",\n  \"finalsettlementdate\",\n  \"shortpct\",\n  \"insiderownership\",\n  \"currentratio\",\n  \"classstartdate\",\n  \"cashsettlementamount\",\n  \"tentativesettlementamount\",\n  \"classenddate\",\n  \"companyname\",\n  \"totalsettlementamount\",\n  \"institutionalownership\",\n  \"institutionalownershippct\",\n  \"marketcap\",\n  \"allegations\",\n];\n\nconst DataTableComponent = (props) => {\n  const styles = useStyles();\n\n  const { getAccessTokenSilently } = useAuth0();\n  const [rawTableData, setRawTableData] = useState(null);\n  const [tableData, setTableData] = useState(null);\n  const [currentTableSort, setCurrentTableSort] = useState(null);\n  const [tableSlice, setTableSlice] = useState(null);\n  const [tableConfig, setTableConfig] = useState(null);\n  const [tableMeta, setTableMeta] = useState(null);\n  const [filters, setFilters] = useState([]);\n  const [drawerToggle, setDrawerToggle] = useState(false);\n  const [savedFilters, setSavedFilters] = useState([]);\n\n  useEffect(async () => {\n    const token = await getAccessTokenSilently();\n    const data = await getData(token);\n    getSavedFiltersHelper(token);\n    if (data?.rows && data?.meta) {\n      convertRowProps(data);\n      const tableData = createTableData(data.rows);\n      const tableConfig = createTableConfig(data.rows, data.meta);\n      setRawTableData(tableData);\n      setTableData(tableData);\n      setTableConfig(tableConfig);\n      setTableMeta(data.meta);\n    }\n  }, []);\n\n  useEffect(() => {\n    processFilters();\n  }, [JSON.stringify(filters)]);\n\n  const checkForCustomColumnProps = (dataProperty) => {\n    const config = {};\n    const propLower = dataProperty.toLowerCase();\n    for (const value of Object.values(colMap)) {\n      if (value.name === propLower) config.displayName = value.displayName;\n    }\n    if (\n      [\n        \"casename\",\n        \"insiderownershippercentfilingdate\",\n        \"institutionalownershipqtrend\",\n        \"institutionalownershippriorquarter\",\n        \"totalsettlementamount\",\n        \"priorquarterrevenue\",\n        \"prioryearrevenue\",\n        \"tentativesettlementamount\",\n      ].includes(propLower)\n    ) {\n      config.width = 300;\n    }\n    if (\n      [\n        \"insiderownershippercentfilingdate\",\n        \"institutionalownershipqtrend\",\n        \"floatpct\",\n        \"short\",\n        \"shortpct\",\n        \"insiderownership\",\n        \"institutionalownership\",\n        \"institutionalownershippct\",\n      ].includes(propLower)\n    ) {\n      config.dataType = \"percent\";\n    }\n    if (\n      [\"ticker\", \"whysuedcategory\", \"casestatus\", \"courtstature\"].includes(\n        propLower\n      )\n    ) {\n      config.alignmentRow = \"center\";\n    }\n    if ([\"currentratio\"].includes(propLower)) {\n      config.dataType = \"number\";\n    }\n    return config;\n  };\n\n  const convertRowProps = (data) => {\n    const boolProps = data.meta.filter((m) => m.type.toLowerCase() === \"tiny\");\n    if (boolProps.length) {\n      for (let row of data.rows) {\n        for (let boolProp of boolProps) {\n          row[boolProp.name] = row[boolProp.name] === 0 ? \"No\" : \"Yes\";\n        }\n      }\n    }\n  };\n\n  const getColumnConfig = (type) => {\n    const config = { dataType: \"string\" };\n    switch (type.toLowerCase()) {\n      case \"var_string\":\n      case \"blob\":\n        config.dataType = \"string\";\n        break;\n      case \"newdecimal\":\n        config.dataType = \"currency\";\n        break;\n      case \"tiny\":\n        config.dataType = \"string\";\n        config.alignmentRow = \"center\";\n        break;\n      case \"long\":\n      case \"float\":\n      case \"double\":\n        config.dataType = \"number\";\n        break;\n      case \"date\":\n        config.dataType = \"date\";\n        config.alignmentRow = \"center\";\n    }\n    return config;\n  };\n\n  const getColumnFromMeta = (meta) => {\n    const config = getColumnConfig(meta.type);\n    const customConfig = checkForCustomColumnProps(meta.name);\n    const hidden = !favoriteCols.find((col) => col === meta.name.toLowerCase());\n    let column = {\n      id: uuidv4(),\n      rawType: meta.type,\n      displayName: meta.name,\n      dataProperty: meta.name,\n      sort: true,\n      sortDirection: null,\n      dataType: null,\n      alignmentHeader: \"center\",\n      alignmentRow: null,\n      width: null,\n      flex: null,\n      options: [],\n      hidden: hidden,\n      headerBorderWidth: 1,\n      cellBorderWidth: 1,\n    };\n    column = Object.assign({}, column, config, customConfig);\n    return column;\n  };\n\n  const createTableConfig = (rows, meta) => {\n    const tableConfig = {\n      numRows: rows.length,\n      rowsPerPage: 50,\n      showHeader: true,\n      actions: [],\n      columns: [],\n      editable: {},\n      // headerCellStyles: [{ dataProperty: ['*'], style: { 'fontSize': '1.6rem', 'fontWeight': 'bold', 'color': 'rgb(109 107 107)' }}],\n      headerCellStyles: [\n        {\n          dataProperty: [\"*\"],\n          style: { fontSize: \"1rem\", fontWeight: \"bold\", color: \"white\" , minWidth : 100 , maxWidth:100 },\n        },\n      ],\n      headerRowStyles: {},\n    };\n    for (let fav of favoriteCols) {\n      const columnMeta = meta.find((m) => m.name.toLowerCase() === fav);\n      if (columnMeta) {\n        tableConfig.columns.push(getColumnFromMeta(columnMeta));\n      }\n    }\n    for (let columnMeta of meta) {\n      if (!favoriteCols.includes(columnMeta.name.toLowerCase())) {\n        tableConfig.columns.push(getColumnFromMeta(columnMeta));\n      }\n    }\n    return tableConfig;\n  };\n\n  const createTableData = (data) => {\n    const tableData = [];\n    for (let rowData of data) {\n      tableData.push({\n        data: rowData,\n        actions: [],\n        options: null,\n        rowStyles: {},\n        // cellStyles: [{ dataProperty: ['*'], style: { 'fontSize': '1.6rem', 'borderRight': '1px solid #F1F1F1', 'borderBottom': '1px solid #F1F1F1' }}],\n        cellStyles: [\n          {\n            dataProperty: [\"*\"],\n            style: {\n              fontSize: \"1rem\",\n              borderRight: \"1px solid #696969\",\n              borderBottom: \"1px solid #696969\",\n              // minWidth : 129 ,\n              // maxWidth:129,\n              wordWrap: \"break-all\",\n              height: 70,\n              display:'flex',\n              flexDirection : 'row',\n              justifyContent:'center'\n            },\n          },\n        ],\n        id: uuidv4(),\n      });\n    }\n    return tableData;\n  };\n\n  const tableSliceHandler = (tableEvent) => {\n    const numTableRows = tableData.length;\n    var lowerRowIdx = Math.max(tableEvent.data.lowerRowIdx, 0);\n    // const upperRowIdx = Math.min(numTableRows, tableEvent.data.upperRowIdx)\n    const upperRowIdx = Math.min(\n      numTableRows,\n      tableEvent.data.lowerRowIdx + tableConfig.rowsPerPage\n    );\n    if (lowerRowIdx > upperRowIdx) {\n      lowerRowIdx = Math.max(upperRowIdx - tableEvent.size, 0);\n    }\n    const tableRows = tableData.slice(lowerRowIdx, upperRowIdx);\n    const slice = {\n      tableRows,\n      lowerRowIdx: lowerRowIdx,\n      upperRowIdx: upperRowIdx,\n    };\n    setTableSlice(slice);\n  };\n\n  const tableSortAscHelper = (newTableData, column) => {\n    switch (column.dataType) {\n      case \"currency\":\n      case \"percent\":\n      case \"number\":\n        newTableData.sort((a, b) => {\n          let valA = a.data[column.dataProperty];\n          let valB = b.data[column.dataProperty];\n          if (valA == undefined) {\n            return 1;\n          }\n          if (valB == undefined) {\n            return -1;\n          }\n          return valA - valB;\n        });\n        break;\n      case \"string\":\n        newTableData.sort((a, b) => {\n          let valA = a.data[column.dataProperty];\n          let valB = b.data[column.dataProperty];\n          if (valA == undefined || valA == \"\") {\n            return 1;\n          }\n          if (valB == undefined || valB == \"\") {\n            return -1;\n          }\n          return valA.localeCompare(valB);\n        });\n        break;\n      case \"date\":\n        newTableData.sort((a, b) => {\n          let valA = a.data[column.dataProperty];\n          let valB = b.data[column.dataProperty];\n          let mntA = moment(valA);\n          let mntB = moment(valB);\n          if (mntA.inspect().includes(\"invalid\") || valA == undefined) {\n            return 1;\n          }\n          if (mntB.inspect().includes(\"invalid\") || valB == undefined) {\n            return -1;\n          }\n          const rtn = moment(valB).isAfter(valA) ? -1 : 1;\n          return rtn;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const tableSortDescHelper = (newTableData, column) => {\n    switch (column.dataType) {\n      case \"currency\":\n      case \"percent\":\n      case \"number\":\n        newTableData.sort((a, b) => {\n          let valA = a.data[column.dataProperty];\n          let valB = b.data[column.dataProperty];\n          if (valA == undefined) {\n            return 1;\n          }\n          if (valB == undefined) {\n            return -1;\n          }\n          return valB - valA;\n        });\n        break;\n      case \"string\":\n        newTableData.sort((a, b) => {\n          let valA = a.data[column.dataProperty];\n          let valB = b.data[column.dataProperty];\n          if (valA == undefined || valA == \"\") {\n            return 1;\n          }\n          if (valB == undefined || valB == \"\") {\n            return -1;\n          }\n          return valB.localeCompare(valA);\n        });\n        break;\n      case \"date\":\n        newTableData.sort((a, b) => {\n          let valA = a.data[column.dataProperty];\n          let valB = b.data[column.dataProperty];\n          let mntA = moment(valA);\n          let mntB = moment(valB);\n          if (mntA.inspect().includes(\"invalid\") || valA == undefined) {\n            return 1;\n          }\n          if (mntB.inspect().includes(\"invalid\") || valB == undefined) {\n            return -1;\n          }\n          const rtn = moment(valA).isAfter(valB) ? -1 : 1;\n          return rtn;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const tableSortHandler = (tableEvent) => {\n    if (!tableConfig) return;\n    const column = tableConfig.columns.find(\n      (col) => col.dataProperty === tableEvent.data.dataProperty\n    );\n    if (!column) return;\n    const newTableData = _.cloneDeep(tableData);\n    const newTableConfig = _.cloneDeep(tableConfig);\n    if (\n      !tableEvent.data.sortDirection ||\n      tableEvent.data.sortDirection === \"desc\"\n    ) {\n      tableSortAscHelper(newTableData, column);\n      newTableConfig.columns.forEach((col) => {\n        col.sortDirection =\n          col.dataProperty === tableEvent.data.dataProperty ? \"asc\" : null;\n      });\n    } else {\n      tableSortDescHelper(newTableData, column);\n      newTableConfig.columns.forEach((col) => {\n        col.sortDirection =\n          col.dataProperty === tableEvent.data.dataProperty ? \"desc\" : null;\n      });\n    }\n    setCurrentTableSort(tableEvent.data);\n    setTableData(newTableData);\n    setTableConfig(newTableConfig);\n  };\n\n  const tableEventHandler = (tableEvent) => {\n    switch (tableEvent.type) {\n      case \"dataSlice\":\n        tableSliceHandler(tableEvent);\n        break;\n      case \"columnSort\":\n        tableSortHandler(tableEvent);\n      default:\n        break;\n    }\n  };\n\n  const processFilters = () => {\n    if (rawTableData == null || tableConfig == null) {\n      return;\n    }\n\n    for (let filter of filters) {\n      // if commited range and range value are not equal this means we are in an intermediate state so no need to update filters\n      if (\n        filter.type === \"range\" &&\n        filter.commitedRange &&\n        filter.commitedRange.toString() !==\n          getRawFromFilterMarks(filter, filter.rangeValue).toString()\n      ) {\n        return;\n      }\n    }\n\n    const tableDataClone = _.cloneDeep(rawTableData);\n    const tableConfigClone = _.cloneDeep(tableConfig);\n\n    if (!filters.length) {\n      // Reset to raw table data when all filters have been removed\n      tableConfigClone.numRows = tableDataClone.length;\n      setTableConfig(tableConfigClone);\n      setTableData(tableDataClone);\n      return;\n    }\n\n    const filteredTableData = [];\n    var atLeastOneChange = false;\n    for (let row of tableDataClone) {\n      let passFilter = true;\n      for (let filter of filters) {\n        // apply each filter using AND logic\n        const value = row.data[filter.column.dataProperty];\n        if (filter.column.dataType === \"date\") {\n          if (filter.type === \"range\") {\n            const date = moment(value);\n            let maxValue;\n            let minValue;\n            if (\n              filter.commitedRange[0].inspect().includes(\"invalid\") ||\n              filter.commitedRange[1].isAfter(filter.commitedRange[0])\n            ) {\n              maxValue = filter.commitedRange[1];\n              minValue = filter.commitedRange[0];\n            } else {\n              maxValue = filter.commitedRange[0];\n              minValue = filter.commitedRange[1];\n            }\n            if (date.inspect().includes(\"invalid\")) {\n              if (minValue.inspect().includes(\"invalid\")) {\n                // inside\n                passFilter = filter.showSelected ? true : false;\n              } else {\n                // outside\n                passFilter = filter.showSelected ? false : true;\n              }\n            } else if (date.isBefore(minValue) || date.isAfter(maxValue)) {\n              // outside\n              passFilter = filter.showSelected ? false : true;\n            } else {\n              // inside\n              passFilter = filter.showSelected ? true : false;\n            }\n          } else if (filter.type === \"value\") {\n            // an empty value filter will be ignored\n            if (filter.selected.length) {\n              if (filter.selected.includes(value)) {\n                // inside\n                passFilter = filter.showSelected ? true : false;\n              } else {\n                // outside\n                passFilter = filter.showSelected ? false : true;\n              }\n            }\n          }\n        } else if (\n          [\"currency\", \"number\", \"percent\"].includes(filter.column.dataType)\n        ) {\n          if (filter.type === \"range\") {\n            const minValue = Math.min(...filter.commitedRange);\n            const maxValue = Math.max(...filter.commitedRange);\n            if (value < minValue || value > maxValue) {\n              // outside\n              passFilter = filter.showSelected ? false : true;\n            } else {\n              // inside\n              passFilter = filter.showSelected ? true : false;\n            }\n          } else if (filter.type === \"value\") {\n            // an empty value filter will be ignored\n            if (filter.selected.length) {\n              if (filter.selected.includes(value)) {\n                // inside\n                passFilter = filter.showSelected ? true : false;\n              } else {\n                // outside\n                passFilter = filter.showSelected ? false : true;\n              }\n            }\n          }\n        } else if (filter.column.dataType === \"string\") {\n          // an empty string filter will be ignored\n          if (filter.selected.length) {\n            if (filter.selected.includes(value)) {\n              // inside\n              passFilter = filter.showSelected ? true : false;\n            } else {\n              // outside\n              passFilter = filter.showSelected ? false : true;\n            }\n          }\n        }\n        if (!passFilter) {\n          break;\n        }\n      }\n      if (passFilter) {\n        // all filters have been passed, add row to output\n        filteredTableData.push(row);\n      } else {\n        atLeastOneChange = true;\n      }\n    }\n\n    if (currentTableSort) {\n      const column = tableConfigClone.columns.find(\n        (col) => col.dataProperty === currentTableSort.dataProperty\n      );\n      if (column) {\n        if (\n          !currentTableSort.sortDirection ||\n          currentTableSort.sortDirection === \"desc\"\n        ) {\n          tableSortAscHelper(filteredTableData, column);\n          tableConfigClone.columns.forEach((col) => {\n            col.sortDirection =\n              col.dataProperty === currentTableSort.dataProperty ? \"asc\" : null;\n          });\n        } else {\n          tableSortDescHelper(filteredTableData, column);\n          tableConfigClone.columns.forEach((col) => {\n            col.sortDirection =\n              col.dataProperty === currentTableSort.dataProperty\n                ? \"desc\"\n                : null;\n          });\n        }\n      }\n    }\n    tableConfigClone.numRows = filteredTableData.length;\n    setTableData(filteredTableData);\n    setTableConfig(tableConfigClone);\n    if (atLeastOneChange) {\n      setTableSlice((state) => ({\n        ...state,\n        lowerRowIdx: null,\n        upperRowIdx: null,\n      }));\n    }\n  };\n\n  const getRawFromFilterMarks = (filter, rangeValue) => {\n    console.log(\"filter>>\",filter)\n    \n    const valA = rangeValue[0];\n    const valB = rangeValue[1];\n    return [valA, valB];\n  };\n\n  const getFilterMarksFromRaw = (filter) => {\n    const getVal = (val) => {\n      if (filter.column.dataType === \"date\") {\n        return val.format(\"YYYY-MM-DD\");\n      }\n      return val;\n    };\n    const valA = filter.marks.find(\n      (mark) => getVal(mark.rawValue) === getVal(filter.commitedRange[0])\n    ).value;\n    const valB = filter.marks.find(\n      (mark) => getVal(mark.rawValue) === getVal(filter.commitedRange[1])\n    ).value;\n    return [valA, valB];\n  };\n\n  const handleFilterRangeCommitted = (filterId, rangeValue) => {\n    const filterIndex = filters.findIndex((f) => f.id === filterId);\n    if (filterIndex === -1) return;\n    const updatedFilter = _.cloneDeep(filters[filterIndex]);\n    updatedFilter.rangeValue = rangeValue;\n    updatedFilter.commitedRange = getRawFromFilterMarks(\n      updatedFilter,\n      rangeValue\n    );\n    setFilters((state) => {\n      const newState = _.cloneDeep(state);\n      newState.splice(filterIndex, 1, updatedFilter);\n      return newState;\n    });\n  };\n\n  const handleFilterRangeChange = (filterId, rangeValue) => {\n    const filterIndex = filters.findIndex((f) => f.id === filterId);\n    if (filterIndex === -1) return;\n    const updatedFilter = _.cloneDeep(filters[filterIndex]);\n    updatedFilter.rangeValue = rangeValue;\n    setFilters((state) => {\n      const newState = _.cloneDeep(state);\n      newState.splice(filterIndex, 1, updatedFilter);\n      return newState;\n    });\n  };\n\n  const handleFilterValueChange = (filterId, values) => {\n    const filterIndex = filters.findIndex((f) => f.id === filterId);\n    if (filterIndex === -1) return;\n    const updatedFilter = _.cloneDeep(filters[filterIndex]);\n    updatedFilter.selected = values;\n    setFilters((state) => {\n      const newState = _.cloneDeep(state);\n      newState.splice(filterIndex, 1, updatedFilter);\n      return newState;\n    });\n  };\n\n  const handleFilterHideSelectChange = (filterId) => {\n    const filterIndex = filters.findIndex((f) => f.id === filterId);\n    if (filterIndex === -1) return;\n    const updatedFilter = _.cloneDeep(filters[filterIndex]);\n    updatedFilter.showSelected = !updatedFilter.showSelected;\n    setFilters((state) => {\n      const newState = _.cloneDeep(state);\n      newState.splice(filterIndex, 1, updatedFilter);\n      return newState;\n    });\n  };\n\n  const handleFilterRangeLimitClicked = (filterId, type) => {\n    const filterIndex = filters.findIndex((f) => f.id === filterId);\n    if (filterIndex === -1) return;\n    const updatedFilter = _.cloneDeep(filters[filterIndex]);\n    if (type === \"max\") {\n      updatedFilter.maxOpen = !updatedFilter.maxOpen;\n    } else {\n      updatedFilter.minOpen = !updatedFilter.minOpen;\n    }\n    setFilters((state) => {\n      const newState = _.cloneDeep(state);\n      newState.splice(filterIndex, 1, updatedFilter);\n      return newState;\n    });\n  };\n\n  const generateRangeFilterMarks = (dataType, columnData) => {\n    let marks = [];\n    if (dataType === \"percent\") {\n      console.log(\"1\")\n      columnData = Array.from(new Set(columnData));\n      const max = Math.max(100, ...columnData);\n      let val = 0;\n      while (val <= max) {\n        marks.push({\n          value: val / 0.5,\n          label: null,\n          rawValue: val,\n        });\n        val += 0.5;\n      }\n      if (max % 0.5 !== 0) {\n        marks.push({\n          value: val / 0.5,\n          label: null,\n          rawValue: val,\n        });\n      }\n    } else if (dataType === \"currency\") {\n      const max = Math.max(...columnData);\n      if (max > 100e6) {\n        // Greater than 100M\n        for (let i = 0; i < 4; i++) {\n          marks.push({ value: i, label: null, rawValue: 10000000 * i });\n        }\n        for (let i = 1; i < 5; i++) {\n          marks.push({ value: i + 3, label: null, rawValue: 10000000 * i });\n        }\n        for (let i = 1; i <= 5; i++) {\n          marks.push({ value: i + 7, label: null, rawValue: 10000000 * i });\n        }\n        for (let i = 1; i <= Math.ceil(max / 100e6); i++) {\n          marks.push({ value: i + 12, label: null, rawValue: 10000000 * i });\n        }\n      } else if (max > 1e6) {\n        // Greater than 1M (max 104 ticks)\n        for (let i = 0; i < 4; i++) {\n          marks.push({ value: i, label: null, rawValue: 250e3 * i });\n        }\n        for (let i = 1; i <= Math.ceil(max / 1e6); i++) {\n          marks.push({ value: i + 3, label: null, rawValue: 1e6 * i });\n        }\n      } else {\n        // Less than 1M (max 101 ticks)\n        for (let i = 0; i <= Math.ceil(max / 10e3); i++) {\n          marks.push({ value: i, label: null, rawValue: 10e3 * i });\n        }\n      }\n    } else {\n      console.log(\"3\")\n      marks = Array.from(new Set(columnData)).map((value, idx) => {\n        return { value: idx, label: null, rawValue: value };\n      });\n    }\n    console.log(\"marks>\",marks)\n    return marks;\n  };\n\n  const filterAddedHelper = (column, type, initialValue, showSelected) => {\n    let filter = null;\n    showSelected = showSelected == undefined ? true : showSelected;\n    if ([\"currency\", \"number\", \"percent\"].includes(column.dataType)) {\n      if (type === \"range\") {\n        filter = {\n          column: column,\n          type: \"range\",\n          max: null,\n          min: null,\n          id: uuidv4(),\n          rangeValue: null,\n          commitedRange: null,\n          marks: [],\n          showSelected,\n          minOpen: false,\n          maxOpen: false,\n        };\n        let columnData = [];\n        rawTableData.forEach((row) => {\n          const data = row.data[column.dataProperty];\n          if (!(data == null)) columnData.push(data);\n        });\n        columnData.sort((a, b) => a - b);\n        filter.marks = generateRangeFilterMarks(column.dataType, columnData);\n        filter.max = columnData[columnData.length - 1];\n        filter.min = 0;\n        filter.commitedRange = initialValue || [\n          columnData[0],\n          columnData[columnData.length - 1],\n        ];\n        filter.rangeValue = initialValue\n          ? getFilterMarksFromRaw(filter)\n          : [filter.min, filter.max];\n      } else if (type === \"value\") {\n        filter = {\n          column: column,\n          type: \"value\",\n          id: uuidv4(),\n          options: null,\n          selected: [],\n          showSelected,\n        };\n        const columnData = [];\n        rawTableData.forEach((row) => {\n          const data = row.data[column.dataProperty];\n          if (!(data == null)) columnData.push(data);\n        });\n        const optionsSet = new Set(columnData);\n        filter.options = Array.from(optionsSet);\n        filter.selected = initialValue || [];\n      }\n    } else if (column.dataType === \"string\") {\n      filter = {\n        column: column,\n        type: \"value\",\n        id: uuidv4(),\n        options: null,\n        selected: [],\n        showSelected,\n      };\n      const columnData = [];\n      rawTableData.forEach((row) => {\n        const data = row.data[column.dataProperty];\n        if (!(data == null)) columnData.push(data);\n      });\n      const optionsSet = new Set(columnData);\n      filter.options = Array.from(optionsSet);\n      filter.selected = initialValue || [];\n    } else if (column.dataType === \"date\") {\n      if (type === \"range\") {\n        filter = {\n          column: column,\n          type: \"range\",\n          max: null,\n          min: null,\n          id: uuidv4(),\n          rangeValue: null,\n          commitedRange: null,\n          marks: null,\n          showSelected,\n          minOpen: false,\n          maxOpen: false,\n        };\n        const columnData = Array.from(\n          new Set(rawTableData.map((row) => row.data[column.dataProperty]))\n        );\n        const columnDataMnt = columnData\n          .map((row) => moment(row))\n          .sort((valA, valB) => {\n            if (valA == undefined) {\n              return -1;\n            }\n            if (valB == undefined) {\n              return 1;\n            }\n            let mntA = moment(valA);\n            let mntB = moment(valB);\n            if (mntA.inspect().includes(\"invalid\")) {\n              return -1;\n            }\n            if (mntB.inspect().includes(\"invalid\")) {\n              return 1;\n            }\n            const rtn = moment(valB).isAfter(valA) ? -1 : 1;\n            return rtn;\n          });\n        filter.marks = columnDataMnt.map((value, idx) => {\n          return { value: idx, label: null, rawValue: value };\n        });\n        filter.max = filter.marks.length - 1;\n        filter.min = 0;\n        filter.commitedRange = initialValue || [\n          columnDataMnt[0],\n          columnDataMnt[columnDataMnt.length - 1],\n        ];\n        filter.rangeValue = initialValue\n          ? getFilterMarksFromRaw(filter)\n          : [filter.min, filter.max];\n      } else if (type === \"value\") {\n        filter = {\n          column: column,\n          type: \"value\",\n          id: uuidv4(),\n          options: null,\n          selected: [],\n          showSelected,\n        };\n        const columnData = rawTableData.map(\n          (row) => row.data[column.dataProperty]\n        );\n        const optionsSet = new Set(columnData);\n        filter.options = Array.from(optionsSet);\n        filter.selected = initialValue || [];\n      }\n    }\n    return filter;\n  };\n\n  const handleFilterAdded = (column, type, initialValue) => {\n    const filter = filterAddedHelper(column, type, initialValue);\n    setFilters((state) => {\n      const newState = _.cloneDeep(state);\n      return [...newState, filter];\n    });\n  };\n\n  const saveFiltersHelper = async (displayName) => {\n    if (!filters.length) return;\n    const filterDefs = filters.map((filter) => {\n      const { dataProperty, rawType } = filter.column;\n      const filterDef = {\n        column: { dataProperty, rawType },\n        id: filter.id,\n        type: filter.type,\n        showSelected: filter.showSelected,\n      };\n      if (filter.type === \"range\") {\n        filterDef.value = filter.commitedRange;\n      } else if (filter.type === \"value\") {\n        filterDef.value = filter.selected;\n      }\n      return filterDef;\n    });\n    const token = await getAccessTokenSilently();\n    await addSavedFilter(token, filterDefs, displayName);\n    getSavedFiltersHelper(token);\n  };\n\n  const getSavedFiltersHelper = async (token) => {\n    token = token ? token : await getAccessTokenSilently();\n    const filters = await getSavedFilters(token);\n    if (filters?.rows) {\n      setSavedFilters(filters.rows);\n    }\n  };\n\n  const deleteSavedFilterHelper = async (filtersData) => {\n    if (!filtersData?.uuid) return;\n    const token = await getAccessTokenSilently();\n    await deleteSavedFilter(token, filtersData.uuid);\n    getSavedFiltersHelper(token);\n  };\n\n  const handleColumnToggle = (columnId) => {\n    const tableConfigClone = _.cloneDeep(tableConfig);\n    const column = tableConfigClone.columns.find((col) => col.id === columnId);\n    if (column) {\n      column.hidden = !column.hidden;\n      setTableConfig(tableConfigClone);\n    }\n  };\n\n  const handleColumnToggleBatch = (columnIds) => {\n    if (!columnIds) return;\n    const tableConfigClone = _.cloneDeep(tableConfig);\n    for (let id of columnIds) {\n      const column = tableConfigClone.columns.find((col) => col.id === id);\n      if (column) {\n        column.hidden = !column.hidden;\n      }\n    }\n    setTableConfig(tableConfigClone);\n  };\n\n  const handleDeleteFilter = (filterId) => {\n    setFilters(filters.filter((filter) => filter.id !== filterId));\n  };\n\n  const applySavedFilters = (filtersData) => {\n    if (!filtersData?.filterJSON) return;\n    const filterDefs = JSON.parse(filtersData.filterJSON);\n    const columnsToToggle = [];\n    const filtersToAdd = [];\n    filterDefs.forEach((filter) => {\n      const column = tableConfig.columns.find(\n        (col) => col.dataProperty === filter.column.dataProperty\n      );\n      if (!column) return;\n      if (column.hidden) {\n        columnsToToggle.push(column.id);\n      }\n      if (column.dataType === \"date\" && filter.type === \"range\") {\n        filter.value = [moment(filter.value[0]), moment(filter.value[1])];\n      }\n\n      filtersToAdd.push(\n        filterAddedHelper(\n          column,\n          filter.type,\n          filter.value,\n          filter.showSelected\n        )\n      );\n    });\n    handleColumnToggleBatch(columnsToToggle);\n    setFilters((state) => {\n      return filtersToAdd;\n    });\n    setDrawerToggle(false);\n  };\n\n  return (\n    <div className={styles.outerContainer}>\n      <Drawer\n        className={styles.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={drawerToggle}\n        classes={{\n          paper: styles.drawerPaper,\n        }}\n      >\n        <Paper\n          elevation={0}\n          className={styles.drawerHandle}\n          onClick={() => setDrawerToggle((state) => !state)}\n        >\n          <IconButton\n            className={styles.handleIcon}\n            classes={{\n              root: styles.handleIconRoot,\n            }}\n          >\n            {drawerToggle ? <KeyboardArrowLeftIcon /> : <MenuIcon />}\n          </IconButton>\n        </Paper>\n        <div className={styles.drawerContainer}>\n          <List>\n            <ListItem key={\"fav-filters\"}>\n              <ListItemIcon>\n                <FilterListIcon />\n              </ListItemIcon>\n              <ListItemText primary={\"Filters\"} />\n            </ListItem>\n            {savedFilters.map((filterData) => (\n              <ListItem\n                onClick={() => applySavedFilters(filterData)}\n                button\n                key={`filter-${filterData.uuid}`}\n              >\n                <ListItemText primary={filterData.displayName} />\n                <ListItemSecondaryAction\n                  onClick={() => deleteSavedFilterHelper(filterData)}\n                >\n                  <IconButton edge=\"end\" aria-label=\"delete\">\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n        </div>\n      </Drawer>\n      <div className={styles.mainContainer}>\n        <div className={styles.filterContainer}>\n          <DataTableFilters\n            handleFilterRangeLimitClicked={handleFilterRangeLimitClicked}\n            handleFilterHideSelectChange={handleFilterHideSelectChange}\n            saveFilters={saveFiltersHelper}\n            handleDeleteFilter={handleDeleteFilter}\n            handleColumnToggle={handleColumnToggle}\n            handleFilterRangeCommitted={handleFilterRangeCommitted}\n            columns={tableConfig?.columns}\n            filters={filters}\n            handleFilterAdded={handleFilterAdded}\n            handleFilterRangeChange={handleFilterRangeChange}\n            handleFilterValueChange={handleFilterValueChange}\n          />\n        </div>\n        <div className={styles.tableContainer}>\n          <DataTable\n            tableRows={tableSlice}\n            config={tableConfig}\n            tableAction={tableEventHandler}\n          ></DataTable>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    drawer: {\n      flexShrink: 0,\n    },\n    drawerContainer: {\n      overflow: \"auto\",\n      width: \"300px\",\n    },\n    drawerPaper: {\n      marginTop: \"95px\",\n      visibility: \"visible !important\",\n      overflowY: \"visible\",\n      height: \"calc(100% - 95px)\",\n    },\n    drawerHandle: {\n      marginRight: \"-48px\",\n      position: \"absolute\",\n      borderRadius: \"0% 50% 50% 0%\",\n      borderStyle: \"solid\",\n      borderWidth: \"1px\",\n      borderLeft: \"none\",\n      borderColor: \"rgba(0, 0, 0, 0.12)\",\n      top: \"15px\",\n      right: \"-2px\",\n      width: \"48px\",\n    },\n    handleIcon: {\n      height: \"50px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    handleIconRoot: {\n      borderRadius: \"0% 50% 50% 0%\",\n    },\n    mainContainer: {\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n      },\n      [theme.breakpoints.down(\"lg\")]: {\n        width: \"900px\",\n      },\n      [theme.breakpoints.up(\"lg\")]: {\n        width: \"1200px\",\n      },\n      [theme.breakpoints.up(\"xl\")]: {\n        width: \"1700px\",\n      },\n      marginTop: \"95px\",\n      padding: \"24px 0px\",\n    },\n    filterContainer: {\n      margin: \"0px 0px 24px 0px\",\n    },\n    tableContainer: {\n      flexGrow: 1,\n    },\n    dataGrid: {\n      backgroundColor: \"#fff\",\n    },\n  };\n});\n\nexport default DataTableComponent;\n","export default __webpack_public_path__ + \"static/media/splashPage.21985792.jpg\";","import { makeStyles } from \"@material-ui/core\"\nimport splashImage from '../assets/images/splashPage.jpg'\nimport { Typography, ButtonBase, Paper } from '@material-ui/core'\nimport React from \"react\"\nimport { useAuth0 } from \"@auth0/auth0-react\"\n\n\nconst useStyles = makeStyles(theme => {\n  return {\n    container: {\n      backgroundImage: `url(${splashImage})`,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      height: '75vh',\n      display: 'flex',\n      flexDirection: 'row', \n      justifyContent: 'center',\n      alignItems: 'center',\n      textAlign: 'center',\n      width: '100%'\n    },\n    titleField: {\n      color: '#fff',\n      marginBottom: '50px',\n      textTransform: 'uppercase',\n      fontWeight: 'bold'\n    },\n    overlay: {\n      minWidth: '500px',\n      padding: '50px',\n      background: \"rgba(0, 8, 39, 0.5)\",\n      borderRadius: '10px'\n    },\n    loginButton: {\n      color: '#fff'\n    },\n    loginButtonOuter: {\n      color: '#fff',\n      padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\n      border: '4px solid transparent',\n      textTransform: 'uppercase'\n    },\n    loginButtonMarked: {\n      height: 3,\n      width: 18,\n      backgroundColor: '#fff',\n      position: 'absolute',\n      bottom: 0,\n      left: 'calc(50% - 9px)',\n      transition: theme.transitions.create('opacity'),\n    },\n    focusVisible: {},\n    loginBase: {\n      '&:hover, &$focusVisible': {\n        zIndex: 1,\n        '& $imageBackdrop': {\n          opacity: 0.15,\n        },\n        '& $loginButtonMarked': {\n          opacity: 0,\n        },\n        '& $loginButtonOuter': {\n          border: '4px solid #fff',\n        },\n      }\n    }\n  }\n})\n\n\nconst PublicHomePage = (props) => {\n  const styles = useStyles()\n\n  const { loginWithRedirect } = useAuth0()\n\n  return (\n    <div className={styles.container}>\n      <Paper elevation={0} className={styles.overlay}>\n        <Typography className={styles.titleField} variant='h3' align='center'>    \n          The Answer\n        </Typography>\n        <ButtonBase\n          focusRipple\n          focusVisibleClassName={styles.focusVisible}\n          className={styles.loginBase}\n          onClick={() => loginWithRedirect({ redirectUri: `${window.location.origin}/dashboard` })}\n        >\n          <span className={styles.loginButtonOuter}>\n            <Typography component='span' variant='subtitle1' className={styles.loginButtonInner}>\n              Login\n              <span className={styles.loginButtonMarked}/>\n            </Typography>\n          </span>\n        </ButtonBase>\n      </Paper>\n    </div>\n  );\n}\n\nexport default PublicHomePage","export default __webpack_public_path__ + \"static/media/c3Logo.0d8a1cbd.png\";","import React from 'react'\nimport { AppBar, Toolbar, Button, Avatar, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport { Link, useLocation } from 'react-router-dom'\nimport c3Logo from '../assets/images/c3Logo.png'\n// import logo from './images/1_a.png'\n\nconst NavigationBar = (props) => {\n  const styles = useStyles()\n  const { isAuthenticated, logout, user, loading } = useAuth0() || {}\n  const currentLocation = useLocation().pathname\n  return (\n    <div>\n      <AppBar position='static' className={styles.appBar} elevation={1}>\n        <Toolbar className={styles.toolbar}>\n          <Link to={{ pathname: '/' }}>\n            <img className={styles.logo} src={c3Logo} />\n          </Link>\n          {currentLocation !== '/' && \n            <Typography component='div' variant='h4' className={styles.currentNavigationLabel}>\n              The Answer\n            </Typography>}\n          <div className={styles.padding}></div>\n          <Button\n            classes={{\n              label: styles.logoutLabel\n            }}\n            disabled={!isAuthenticated}\n            onClick={() => logout()}\n            >\n            Logout\n          </Button>\n          {isAuthenticated && !loading && <Avatar alt='Current User' src={user.picture} />}\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default NavigationBar\n\nconst useStyles = makeStyles(theme => {\n  return {\n    toolbar: {\n      display: 'flex'\n    },\n    padding: {\n      flexGrow: 1\n    },\n    logoutLabel: {\n      color: theme.palette.text.secondary,\n      marginRight: theme.spacing(3)\n    },\n    appBar: {\n      backgroundColor: theme.palette.background.paper,\n      minHeight: '50px',\n      padding: '15px',\n      zIndex: theme.zIndex.drawer + 1,\n      position: 'fixed'\n    },\n    logo: {\n      width: 'auto',\n      height: '50px',\n      marginRight: theme.spacing(3)\n    },\n    currentNavigationLabel: {\n      color: theme.palette.text.primary\n    }\n  }\n})\n","import React from 'react'\n\n\nconst Dashboard = () => {\n    return (\n        <div style={{ marginTop: 100}} className=\"text-3xl\">amdsdaan</div>\n    )\n}\n\nexport default Dashboard;","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport ProtectedRoute from './auth/protected-route'\nimport DataTableContainer from './components/DataTableContainer'\nimport PublicHomePage from './components/PublicHomePage'\nimport NavigationBar from './components/NavigationBar'\nimport { makeStyles } from '@material-ui/styles'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport Dashboard from './components/Dashboard'\n\nconst useStyles = makeStyles(theme => {\n  return {\n    bodyContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: 'inherit',\n      backgroundColor: theme.palette.background.default,\n      alignItems: 'center',\n      flexGrow: 1\n    },\n    appContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    }\n  }\n})\n\nfunction App() {\n  const styles = useStyles()\n  const { isAuthenticated, isLoading } = useAuth0()\n  return (\n    <div className={styles.appContainer}>\n      <div className='mt-12'>amuu</div>\n      <NavigationBar/>\n      <div className={styles.bodyContainer}>\n        <Switch>\n          {!isLoading && <Route exact path='/'>{isAuthenticated ? <Redirect to='/dashboard'/> : <PublicHomePage />}</Route>}\n          <ProtectedRoute exact path='/dashboard' component={Dashboard} />\n          <ProtectedRoute exact path='/old-dashboard' component={DataTableContainer} />\n        </Switch>\n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const domain = \"c3-insurance.us.auth0.com\";\n  const clientId = \"Qf3YINtTxmjiEqGcnRbVHV2PkSQTzXtI\";\n  const audience = \"https://c3-insurance.api\";\n\n  const history = useHistory();\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/core'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Auth0ProviderWithHistory from './auth/auth0-provider-with-history'\n\nconst theme = createMuiTheme({\n  typography: {\n      htmlFontSize: 10\n  },\n  palette: {\n    type: 'dark'\n  }\n  })\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Auth0ProviderWithHistory>\n          <App />\n        </Auth0ProviderWithHistory>  \n      </Router>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}